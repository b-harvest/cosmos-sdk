// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package epochingv1

import (
	v1beta1 "cosmossdk.io/api/cosmos/staking/v1beta1"
	types "cosmossdk.io/api/tendermint/types"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Epoch                        protoreflect.MessageDescriptor
	fd_Epoch_epoch_number           protoreflect.FieldDescriptor
	fd_Epoch_current_epoch_interval protoreflect.FieldDescriptor
	fd_Epoch_first_block_height     protoreflect.FieldDescriptor
	fd_Epoch_last_block_header      protoreflect.FieldDescriptor
	fd_Epoch_app_hash_root          protoreflect.FieldDescriptor
	fd_Epoch_sealer_header          protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_epoching_proto_init()
	md_Epoch = File_cosmos_epoching_v1_epoching_proto.Messages().ByName("Epoch")
	fd_Epoch_epoch_number = md_Epoch.Fields().ByName("epoch_number")
	fd_Epoch_current_epoch_interval = md_Epoch.Fields().ByName("current_epoch_interval")
	fd_Epoch_first_block_height = md_Epoch.Fields().ByName("first_block_height")
	fd_Epoch_last_block_header = md_Epoch.Fields().ByName("last_block_header")
	fd_Epoch_app_hash_root = md_Epoch.Fields().ByName("app_hash_root")
	fd_Epoch_sealer_header = md_Epoch.Fields().ByName("sealer_header")
}

var _ protoreflect.Message = (*fastReflection_Epoch)(nil)

type fastReflection_Epoch Epoch

func (x *Epoch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Epoch)(x)
}

func (x *Epoch) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Epoch_messageType fastReflection_Epoch_messageType
var _ protoreflect.MessageType = fastReflection_Epoch_messageType{}

type fastReflection_Epoch_messageType struct{}

func (x fastReflection_Epoch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Epoch)(nil)
}
func (x fastReflection_Epoch_messageType) New() protoreflect.Message {
	return new(fastReflection_Epoch)
}
func (x fastReflection_Epoch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Epoch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Epoch) Descriptor() protoreflect.MessageDescriptor {
	return md_Epoch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Epoch) Type() protoreflect.MessageType {
	return _fastReflection_Epoch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Epoch) New() protoreflect.Message {
	return new(fastReflection_Epoch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Epoch) Interface() protoreflect.ProtoMessage {
	return (*Epoch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Epoch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNumber)
		if !f(fd_Epoch_epoch_number, value) {
			return
		}
	}
	if x.CurrentEpochInterval != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentEpochInterval)
		if !f(fd_Epoch_current_epoch_interval, value) {
			return
		}
	}
	if x.FirstBlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.FirstBlockHeight)
		if !f(fd_Epoch_first_block_height, value) {
			return
		}
	}
	if x.LastBlockHeader != nil {
		value := protoreflect.ValueOfMessage(x.LastBlockHeader.ProtoReflect())
		if !f(fd_Epoch_last_block_header, value) {
			return
		}
	}
	if len(x.AppHashRoot) != 0 {
		value := protoreflect.ValueOfBytes(x.AppHashRoot)
		if !f(fd_Epoch_app_hash_root, value) {
			return
		}
	}
	if x.SealerHeader != nil {
		value := protoreflect.ValueOfMessage(x.SealerHeader.ProtoReflect())
		if !f(fd_Epoch_sealer_header, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Epoch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Epoch.epoch_number":
		return x.EpochNumber != uint64(0)
	case "cosmos.epoching.v1.Epoch.current_epoch_interval":
		return x.CurrentEpochInterval != uint64(0)
	case "cosmos.epoching.v1.Epoch.first_block_height":
		return x.FirstBlockHeight != uint64(0)
	case "cosmos.epoching.v1.Epoch.last_block_header":
		return x.LastBlockHeader != nil
	case "cosmos.epoching.v1.Epoch.app_hash_root":
		return len(x.AppHashRoot) != 0
	case "cosmos.epoching.v1.Epoch.sealer_header":
		return x.SealerHeader != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Epoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Epoch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Epoch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Epoch.epoch_number":
		x.EpochNumber = uint64(0)
	case "cosmos.epoching.v1.Epoch.current_epoch_interval":
		x.CurrentEpochInterval = uint64(0)
	case "cosmos.epoching.v1.Epoch.first_block_height":
		x.FirstBlockHeight = uint64(0)
	case "cosmos.epoching.v1.Epoch.last_block_header":
		x.LastBlockHeader = nil
	case "cosmos.epoching.v1.Epoch.app_hash_root":
		x.AppHashRoot = nil
	case "cosmos.epoching.v1.Epoch.sealer_header":
		x.SealerHeader = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Epoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Epoch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Epoch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.Epoch.epoch_number":
		value := x.EpochNumber
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.Epoch.current_epoch_interval":
		value := x.CurrentEpochInterval
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.Epoch.first_block_height":
		value := x.FirstBlockHeight
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.Epoch.last_block_header":
		value := x.LastBlockHeader
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cosmos.epoching.v1.Epoch.app_hash_root":
		value := x.AppHashRoot
		return protoreflect.ValueOfBytes(value)
	case "cosmos.epoching.v1.Epoch.sealer_header":
		value := x.SealerHeader
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Epoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Epoch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Epoch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Epoch.epoch_number":
		x.EpochNumber = value.Uint()
	case "cosmos.epoching.v1.Epoch.current_epoch_interval":
		x.CurrentEpochInterval = value.Uint()
	case "cosmos.epoching.v1.Epoch.first_block_height":
		x.FirstBlockHeight = value.Uint()
	case "cosmos.epoching.v1.Epoch.last_block_header":
		x.LastBlockHeader = value.Message().Interface().(*types.Header)
	case "cosmos.epoching.v1.Epoch.app_hash_root":
		x.AppHashRoot = value.Bytes()
	case "cosmos.epoching.v1.Epoch.sealer_header":
		x.SealerHeader = value.Message().Interface().(*types.Header)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Epoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Epoch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Epoch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Epoch.last_block_header":
		if x.LastBlockHeader == nil {
			x.LastBlockHeader = new(types.Header)
		}
		return protoreflect.ValueOfMessage(x.LastBlockHeader.ProtoReflect())
	case "cosmos.epoching.v1.Epoch.sealer_header":
		if x.SealerHeader == nil {
			x.SealerHeader = new(types.Header)
		}
		return protoreflect.ValueOfMessage(x.SealerHeader.ProtoReflect())
	case "cosmos.epoching.v1.Epoch.epoch_number":
		panic(fmt.Errorf("field epoch_number of message cosmos.epoching.v1.Epoch is not mutable"))
	case "cosmos.epoching.v1.Epoch.current_epoch_interval":
		panic(fmt.Errorf("field current_epoch_interval of message cosmos.epoching.v1.Epoch is not mutable"))
	case "cosmos.epoching.v1.Epoch.first_block_height":
		panic(fmt.Errorf("field first_block_height of message cosmos.epoching.v1.Epoch is not mutable"))
	case "cosmos.epoching.v1.Epoch.app_hash_root":
		panic(fmt.Errorf("field app_hash_root of message cosmos.epoching.v1.Epoch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Epoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Epoch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Epoch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Epoch.epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.Epoch.current_epoch_interval":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.Epoch.first_block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.Epoch.last_block_header":
		m := new(types.Header)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "cosmos.epoching.v1.Epoch.app_hash_root":
		return protoreflect.ValueOfBytes(nil)
	case "cosmos.epoching.v1.Epoch.sealer_header":
		m := new(types.Header)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Epoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Epoch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Epoch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.Epoch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Epoch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Epoch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Epoch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Epoch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Epoch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNumber))
		}
		if x.CurrentEpochInterval != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentEpochInterval))
		}
		if x.FirstBlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.FirstBlockHeight))
		}
		if x.LastBlockHeader != nil {
			l = options.Size(x.LastBlockHeader)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AppHashRoot)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.SealerHeader != nil {
			l = options.Size(x.SealerHeader)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Epoch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SealerHeader != nil {
			encoded, err := options.Marshal(x.SealerHeader)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.AppHashRoot) > 0 {
			i -= len(x.AppHashRoot)
			copy(dAtA[i:], x.AppHashRoot)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AppHashRoot)))
			i--
			dAtA[i] = 0x2a
		}
		if x.LastBlockHeader != nil {
			encoded, err := options.Marshal(x.LastBlockHeader)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.FirstBlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FirstBlockHeight))
			i--
			dAtA[i] = 0x18
		}
		if x.CurrentEpochInterval != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentEpochInterval))
			i--
			dAtA[i] = 0x10
		}
		if x.EpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNumber))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Epoch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Epoch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Epoch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
				}
				x.EpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentEpochInterval", wireType)
				}
				x.CurrentEpochInterval = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentEpochInterval |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FirstBlockHeight", wireType)
				}
				x.FirstBlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FirstBlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LastBlockHeader", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LastBlockHeader == nil {
					x.LastBlockHeader = &types.Header{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LastBlockHeader); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AppHashRoot", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AppHashRoot = append(x.AppHashRoot[:0], dAtA[iNdEx:postIndex]...)
				if x.AppHashRoot == nil {
					x.AppHashRoot = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SealerHeader", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.SealerHeader == nil {
					x.SealerHeader = &types.Header{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SealerHeader); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueuedMessage                      protoreflect.MessageDescriptor
	fd_QueuedMessage_tx_id                protoreflect.FieldDescriptor
	fd_QueuedMessage_msg_id               protoreflect.FieldDescriptor
	fd_QueuedMessage_block_height         protoreflect.FieldDescriptor
	fd_QueuedMessage_block_time           protoreflect.FieldDescriptor
	fd_QueuedMessage_msg_create_validator protoreflect.FieldDescriptor
	fd_QueuedMessage_msg_delegate         protoreflect.FieldDescriptor
	fd_QueuedMessage_msg_undelegate       protoreflect.FieldDescriptor
	fd_QueuedMessage_msg_begin_redelegate protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_epoching_proto_init()
	md_QueuedMessage = File_cosmos_epoching_v1_epoching_proto.Messages().ByName("QueuedMessage")
	fd_QueuedMessage_tx_id = md_QueuedMessage.Fields().ByName("tx_id")
	fd_QueuedMessage_msg_id = md_QueuedMessage.Fields().ByName("msg_id")
	fd_QueuedMessage_block_height = md_QueuedMessage.Fields().ByName("block_height")
	fd_QueuedMessage_block_time = md_QueuedMessage.Fields().ByName("block_time")
	fd_QueuedMessage_msg_create_validator = md_QueuedMessage.Fields().ByName("msg_create_validator")
	fd_QueuedMessage_msg_delegate = md_QueuedMessage.Fields().ByName("msg_delegate")
	fd_QueuedMessage_msg_undelegate = md_QueuedMessage.Fields().ByName("msg_undelegate")
	fd_QueuedMessage_msg_begin_redelegate = md_QueuedMessage.Fields().ByName("msg_begin_redelegate")
}

var _ protoreflect.Message = (*fastReflection_QueuedMessage)(nil)

type fastReflection_QueuedMessage QueuedMessage

func (x *QueuedMessage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueuedMessage)(x)
}

func (x *QueuedMessage) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueuedMessage_messageType fastReflection_QueuedMessage_messageType
var _ protoreflect.MessageType = fastReflection_QueuedMessage_messageType{}

type fastReflection_QueuedMessage_messageType struct{}

func (x fastReflection_QueuedMessage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueuedMessage)(nil)
}
func (x fastReflection_QueuedMessage_messageType) New() protoreflect.Message {
	return new(fastReflection_QueuedMessage)
}
func (x fastReflection_QueuedMessage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueuedMessage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueuedMessage) Descriptor() protoreflect.MessageDescriptor {
	return md_QueuedMessage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueuedMessage) Type() protoreflect.MessageType {
	return _fastReflection_QueuedMessage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueuedMessage) New() protoreflect.Message {
	return new(fastReflection_QueuedMessage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueuedMessage) Interface() protoreflect.ProtoMessage {
	return (*QueuedMessage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueuedMessage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.TxId) != 0 {
		value := protoreflect.ValueOfBytes(x.TxId)
		if !f(fd_QueuedMessage_tx_id, value) {
			return
		}
	}
	if len(x.MsgId) != 0 {
		value := protoreflect.ValueOfBytes(x.MsgId)
		if !f(fd_QueuedMessage_msg_id, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_QueuedMessage_block_height, value) {
			return
		}
	}
	if x.BlockTime != nil {
		value := protoreflect.ValueOfMessage(x.BlockTime.ProtoReflect())
		if !f(fd_QueuedMessage_block_time, value) {
			return
		}
	}
	if x.Msg != nil {
		switch o := x.Msg.(type) {
		case *QueuedMessage_MsgCreateValidator:
			v := o.MsgCreateValidator
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_QueuedMessage_msg_create_validator, value) {
				return
			}
		case *QueuedMessage_MsgDelegate:
			v := o.MsgDelegate
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_QueuedMessage_msg_delegate, value) {
				return
			}
		case *QueuedMessage_MsgUndelegate:
			v := o.MsgUndelegate
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_QueuedMessage_msg_undelegate, value) {
				return
			}
		case *QueuedMessage_MsgBeginRedelegate:
			v := o.MsgBeginRedelegate
			value := protoreflect.ValueOfMessage(v.ProtoReflect())
			if !f(fd_QueuedMessage_msg_begin_redelegate, value) {
				return
			}
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueuedMessage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessage.tx_id":
		return len(x.TxId) != 0
	case "cosmos.epoching.v1.QueuedMessage.msg_id":
		return len(x.MsgId) != 0
	case "cosmos.epoching.v1.QueuedMessage.block_height":
		return x.BlockHeight != uint64(0)
	case "cosmos.epoching.v1.QueuedMessage.block_time":
		return x.BlockTime != nil
	case "cosmos.epoching.v1.QueuedMessage.msg_create_validator":
		if x.Msg == nil {
			return false
		} else if _, ok := x.Msg.(*QueuedMessage_MsgCreateValidator); ok {
			return true
		} else {
			return false
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_delegate":
		if x.Msg == nil {
			return false
		} else if _, ok := x.Msg.(*QueuedMessage_MsgDelegate); ok {
			return true
		} else {
			return false
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_undelegate":
		if x.Msg == nil {
			return false
		} else if _, ok := x.Msg.(*QueuedMessage_MsgUndelegate); ok {
			return true
		} else {
			return false
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_begin_redelegate":
		if x.Msg == nil {
			return false
		} else if _, ok := x.Msg.(*QueuedMessage_MsgBeginRedelegate); ok {
			return true
		} else {
			return false
		}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessage"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueuedMessage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessage.tx_id":
		x.TxId = nil
	case "cosmos.epoching.v1.QueuedMessage.msg_id":
		x.MsgId = nil
	case "cosmos.epoching.v1.QueuedMessage.block_height":
		x.BlockHeight = uint64(0)
	case "cosmos.epoching.v1.QueuedMessage.block_time":
		x.BlockTime = nil
	case "cosmos.epoching.v1.QueuedMessage.msg_create_validator":
		x.Msg = nil
	case "cosmos.epoching.v1.QueuedMessage.msg_delegate":
		x.Msg = nil
	case "cosmos.epoching.v1.QueuedMessage.msg_undelegate":
		x.Msg = nil
	case "cosmos.epoching.v1.QueuedMessage.msg_begin_redelegate":
		x.Msg = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessage"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueuedMessage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.QueuedMessage.tx_id":
		value := x.TxId
		return protoreflect.ValueOfBytes(value)
	case "cosmos.epoching.v1.QueuedMessage.msg_id":
		value := x.MsgId
		return protoreflect.ValueOfBytes(value)
	case "cosmos.epoching.v1.QueuedMessage.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.QueuedMessage.block_time":
		value := x.BlockTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cosmos.epoching.v1.QueuedMessage.msg_create_validator":
		if x.Msg == nil {
			return protoreflect.ValueOfMessage((*v1beta1.MsgCreateValidator)(nil).ProtoReflect())
		} else if v, ok := x.Msg.(*QueuedMessage_MsgCreateValidator); ok {
			return protoreflect.ValueOfMessage(v.MsgCreateValidator.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*v1beta1.MsgCreateValidator)(nil).ProtoReflect())
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_delegate":
		if x.Msg == nil {
			return protoreflect.ValueOfMessage((*v1beta1.MsgDelegate)(nil).ProtoReflect())
		} else if v, ok := x.Msg.(*QueuedMessage_MsgDelegate); ok {
			return protoreflect.ValueOfMessage(v.MsgDelegate.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*v1beta1.MsgDelegate)(nil).ProtoReflect())
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_undelegate":
		if x.Msg == nil {
			return protoreflect.ValueOfMessage((*v1beta1.MsgUndelegate)(nil).ProtoReflect())
		} else if v, ok := x.Msg.(*QueuedMessage_MsgUndelegate); ok {
			return protoreflect.ValueOfMessage(v.MsgUndelegate.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*v1beta1.MsgUndelegate)(nil).ProtoReflect())
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_begin_redelegate":
		if x.Msg == nil {
			return protoreflect.ValueOfMessage((*v1beta1.MsgBeginRedelegate)(nil).ProtoReflect())
		} else if v, ok := x.Msg.(*QueuedMessage_MsgBeginRedelegate); ok {
			return protoreflect.ValueOfMessage(v.MsgBeginRedelegate.ProtoReflect())
		} else {
			return protoreflect.ValueOfMessage((*v1beta1.MsgBeginRedelegate)(nil).ProtoReflect())
		}
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessage"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueuedMessage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessage.tx_id":
		x.TxId = value.Bytes()
	case "cosmos.epoching.v1.QueuedMessage.msg_id":
		x.MsgId = value.Bytes()
	case "cosmos.epoching.v1.QueuedMessage.block_height":
		x.BlockHeight = value.Uint()
	case "cosmos.epoching.v1.QueuedMessage.block_time":
		x.BlockTime = value.Message().Interface().(*timestamppb.Timestamp)
	case "cosmos.epoching.v1.QueuedMessage.msg_create_validator":
		cv := value.Message().Interface().(*v1beta1.MsgCreateValidator)
		x.Msg = &QueuedMessage_MsgCreateValidator{MsgCreateValidator: cv}
	case "cosmos.epoching.v1.QueuedMessage.msg_delegate":
		cv := value.Message().Interface().(*v1beta1.MsgDelegate)
		x.Msg = &QueuedMessage_MsgDelegate{MsgDelegate: cv}
	case "cosmos.epoching.v1.QueuedMessage.msg_undelegate":
		cv := value.Message().Interface().(*v1beta1.MsgUndelegate)
		x.Msg = &QueuedMessage_MsgUndelegate{MsgUndelegate: cv}
	case "cosmos.epoching.v1.QueuedMessage.msg_begin_redelegate":
		cv := value.Message().Interface().(*v1beta1.MsgBeginRedelegate)
		x.Msg = &QueuedMessage_MsgBeginRedelegate{MsgBeginRedelegate: cv}
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessage"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueuedMessage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessage.block_time":
		if x.BlockTime == nil {
			x.BlockTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.BlockTime.ProtoReflect())
	case "cosmos.epoching.v1.QueuedMessage.msg_create_validator":
		if x.Msg == nil {
			value := &v1beta1.MsgCreateValidator{}
			oneofValue := &QueuedMessage_MsgCreateValidator{MsgCreateValidator: value}
			x.Msg = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Msg.(type) {
		case *QueuedMessage_MsgCreateValidator:
			return protoreflect.ValueOfMessage(m.MsgCreateValidator.ProtoReflect())
		default:
			value := &v1beta1.MsgCreateValidator{}
			oneofValue := &QueuedMessage_MsgCreateValidator{MsgCreateValidator: value}
			x.Msg = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_delegate":
		if x.Msg == nil {
			value := &v1beta1.MsgDelegate{}
			oneofValue := &QueuedMessage_MsgDelegate{MsgDelegate: value}
			x.Msg = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Msg.(type) {
		case *QueuedMessage_MsgDelegate:
			return protoreflect.ValueOfMessage(m.MsgDelegate.ProtoReflect())
		default:
			value := &v1beta1.MsgDelegate{}
			oneofValue := &QueuedMessage_MsgDelegate{MsgDelegate: value}
			x.Msg = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_undelegate":
		if x.Msg == nil {
			value := &v1beta1.MsgUndelegate{}
			oneofValue := &QueuedMessage_MsgUndelegate{MsgUndelegate: value}
			x.Msg = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Msg.(type) {
		case *QueuedMessage_MsgUndelegate:
			return protoreflect.ValueOfMessage(m.MsgUndelegate.ProtoReflect())
		default:
			value := &v1beta1.MsgUndelegate{}
			oneofValue := &QueuedMessage_MsgUndelegate{MsgUndelegate: value}
			x.Msg = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "cosmos.epoching.v1.QueuedMessage.msg_begin_redelegate":
		if x.Msg == nil {
			value := &v1beta1.MsgBeginRedelegate{}
			oneofValue := &QueuedMessage_MsgBeginRedelegate{MsgBeginRedelegate: value}
			x.Msg = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
		switch m := x.Msg.(type) {
		case *QueuedMessage_MsgBeginRedelegate:
			return protoreflect.ValueOfMessage(m.MsgBeginRedelegate.ProtoReflect())
		default:
			value := &v1beta1.MsgBeginRedelegate{}
			oneofValue := &QueuedMessage_MsgBeginRedelegate{MsgBeginRedelegate: value}
			x.Msg = oneofValue
			return protoreflect.ValueOfMessage(value.ProtoReflect())
		}
	case "cosmos.epoching.v1.QueuedMessage.tx_id":
		panic(fmt.Errorf("field tx_id of message cosmos.epoching.v1.QueuedMessage is not mutable"))
	case "cosmos.epoching.v1.QueuedMessage.msg_id":
		panic(fmt.Errorf("field msg_id of message cosmos.epoching.v1.QueuedMessage is not mutable"))
	case "cosmos.epoching.v1.QueuedMessage.block_height":
		panic(fmt.Errorf("field block_height of message cosmos.epoching.v1.QueuedMessage is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessage"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueuedMessage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessage.tx_id":
		return protoreflect.ValueOfBytes(nil)
	case "cosmos.epoching.v1.QueuedMessage.msg_id":
		return protoreflect.ValueOfBytes(nil)
	case "cosmos.epoching.v1.QueuedMessage.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.QueuedMessage.block_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "cosmos.epoching.v1.QueuedMessage.msg_create_validator":
		value := &v1beta1.MsgCreateValidator{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cosmos.epoching.v1.QueuedMessage.msg_delegate":
		value := &v1beta1.MsgDelegate{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cosmos.epoching.v1.QueuedMessage.msg_undelegate":
		value := &v1beta1.MsgUndelegate{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cosmos.epoching.v1.QueuedMessage.msg_begin_redelegate":
		value := &v1beta1.MsgBeginRedelegate{}
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessage"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueuedMessage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	case "cosmos.epoching.v1.QueuedMessage.msg":
		if x.Msg == nil {
			return nil
		}
		switch x.Msg.(type) {
		case *QueuedMessage_MsgCreateValidator:
			return x.Descriptor().Fields().ByName("msg_create_validator")
		case *QueuedMessage_MsgDelegate:
			return x.Descriptor().Fields().ByName("msg_delegate")
		case *QueuedMessage_MsgUndelegate:
			return x.Descriptor().Fields().ByName("msg_undelegate")
		case *QueuedMessage_MsgBeginRedelegate:
			return x.Descriptor().Fields().ByName("msg_begin_redelegate")
		}
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.QueuedMessage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueuedMessage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueuedMessage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueuedMessage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueuedMessage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueuedMessage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MsgId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.BlockTime != nil {
			l = options.Size(x.BlockTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		switch x := x.Msg.(type) {
		case *QueuedMessage_MsgCreateValidator:
			if x == nil {
				break
			}
			l = options.Size(x.MsgCreateValidator)
			n += 1 + l + runtime.Sov(uint64(l))
		case *QueuedMessage_MsgDelegate:
			if x == nil {
				break
			}
			l = options.Size(x.MsgDelegate)
			n += 1 + l + runtime.Sov(uint64(l))
		case *QueuedMessage_MsgUndelegate:
			if x == nil {
				break
			}
			l = options.Size(x.MsgUndelegate)
			n += 1 + l + runtime.Sov(uint64(l))
		case *QueuedMessage_MsgBeginRedelegate:
			if x == nil {
				break
			}
			l = options.Size(x.MsgBeginRedelegate)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueuedMessage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		switch x := x.Msg.(type) {
		case *QueuedMessage_MsgCreateValidator:
			encoded, err := options.Marshal(x.MsgCreateValidator)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		case *QueuedMessage_MsgDelegate:
			encoded, err := options.Marshal(x.MsgDelegate)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		case *QueuedMessage_MsgUndelegate:
			encoded, err := options.Marshal(x.MsgUndelegate)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		case *QueuedMessage_MsgBeginRedelegate:
			encoded, err := options.Marshal(x.MsgBeginRedelegate)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.BlockTime != nil {
			encoded, err := options.Marshal(x.BlockTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x18
		}
		if len(x.MsgId) > 0 {
			i -= len(x.MsgId)
			copy(dAtA[i:], x.MsgId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MsgId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueuedMessage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueuedMessage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueuedMessage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = append(x.TxId[:0], dAtA[iNdEx:postIndex]...)
				if x.TxId == nil {
					x.TxId = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MsgId = append(x.MsgId[:0], dAtA[iNdEx:postIndex]...)
				if x.MsgId == nil {
					x.MsgId = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BlockTime == nil {
					x.BlockTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MsgCreateValidator", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &v1beta1.MsgCreateValidator{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Msg = &QueuedMessage_MsgCreateValidator{v}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MsgDelegate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &v1beta1.MsgDelegate{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Msg = &QueuedMessage_MsgDelegate{v}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MsgUndelegate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &v1beta1.MsgUndelegate{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Msg = &QueuedMessage_MsgUndelegate{v}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MsgBeginRedelegate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				v := &v1beta1.MsgBeginRedelegate{}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], v); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				x.Msg = &QueuedMessage_MsgBeginRedelegate{v}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueuedMessageList_2_list)(nil)

type _QueuedMessageList_2_list struct {
	list *[]*QueuedMessage
}

func (x *_QueuedMessageList_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueuedMessageList_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueuedMessageList_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueuedMessage)
	(*x.list)[i] = concreteValue
}

func (x *_QueuedMessageList_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*QueuedMessage)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueuedMessageList_2_list) AppendMutable() protoreflect.Value {
	v := new(QueuedMessage)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueuedMessageList_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueuedMessageList_2_list) NewElement() protoreflect.Value {
	v := new(QueuedMessage)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueuedMessageList_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueuedMessageList              protoreflect.MessageDescriptor
	fd_QueuedMessageList_epoch_number protoreflect.FieldDescriptor
	fd_QueuedMessageList_msgs         protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_epoching_proto_init()
	md_QueuedMessageList = File_cosmos_epoching_v1_epoching_proto.Messages().ByName("QueuedMessageList")
	fd_QueuedMessageList_epoch_number = md_QueuedMessageList.Fields().ByName("epoch_number")
	fd_QueuedMessageList_msgs = md_QueuedMessageList.Fields().ByName("msgs")
}

var _ protoreflect.Message = (*fastReflection_QueuedMessageList)(nil)

type fastReflection_QueuedMessageList QueuedMessageList

func (x *QueuedMessageList) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueuedMessageList)(x)
}

func (x *QueuedMessageList) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueuedMessageList_messageType fastReflection_QueuedMessageList_messageType
var _ protoreflect.MessageType = fastReflection_QueuedMessageList_messageType{}

type fastReflection_QueuedMessageList_messageType struct{}

func (x fastReflection_QueuedMessageList_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueuedMessageList)(nil)
}
func (x fastReflection_QueuedMessageList_messageType) New() protoreflect.Message {
	return new(fastReflection_QueuedMessageList)
}
func (x fastReflection_QueuedMessageList_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueuedMessageList
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueuedMessageList) Descriptor() protoreflect.MessageDescriptor {
	return md_QueuedMessageList
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueuedMessageList) Type() protoreflect.MessageType {
	return _fastReflection_QueuedMessageList_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueuedMessageList) New() protoreflect.Message {
	return new(fastReflection_QueuedMessageList)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueuedMessageList) Interface() protoreflect.ProtoMessage {
	return (*QueuedMessageList)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueuedMessageList) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNumber)
		if !f(fd_QueuedMessageList_epoch_number, value) {
			return
		}
	}
	if len(x.Msgs) != 0 {
		value := protoreflect.ValueOfList(&_QueuedMessageList_2_list{list: &x.Msgs})
		if !f(fd_QueuedMessageList_msgs, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueuedMessageList) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessageList.epoch_number":
		return x.EpochNumber != uint64(0)
	case "cosmos.epoching.v1.QueuedMessageList.msgs":
		return len(x.Msgs) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessageList"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessageList does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueuedMessageList) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessageList.epoch_number":
		x.EpochNumber = uint64(0)
	case "cosmos.epoching.v1.QueuedMessageList.msgs":
		x.Msgs = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessageList"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessageList does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueuedMessageList) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.QueuedMessageList.epoch_number":
		value := x.EpochNumber
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.QueuedMessageList.msgs":
		if len(x.Msgs) == 0 {
			return protoreflect.ValueOfList(&_QueuedMessageList_2_list{})
		}
		listValue := &_QueuedMessageList_2_list{list: &x.Msgs}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessageList"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessageList does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueuedMessageList) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessageList.epoch_number":
		x.EpochNumber = value.Uint()
	case "cosmos.epoching.v1.QueuedMessageList.msgs":
		lv := value.List()
		clv := lv.(*_QueuedMessageList_2_list)
		x.Msgs = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessageList"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessageList does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueuedMessageList) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessageList.msgs":
		if x.Msgs == nil {
			x.Msgs = []*QueuedMessage{}
		}
		value := &_QueuedMessageList_2_list{list: &x.Msgs}
		return protoreflect.ValueOfList(value)
	case "cosmos.epoching.v1.QueuedMessageList.epoch_number":
		panic(fmt.Errorf("field epoch_number of message cosmos.epoching.v1.QueuedMessageList is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessageList"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessageList does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueuedMessageList) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.QueuedMessageList.epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.QueuedMessageList.msgs":
		list := []*QueuedMessage{}
		return protoreflect.ValueOfList(&_QueuedMessageList_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.QueuedMessageList"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.QueuedMessageList does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueuedMessageList) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.QueuedMessageList", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueuedMessageList) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueuedMessageList) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueuedMessageList) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueuedMessageList) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueuedMessageList)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNumber))
		}
		if len(x.Msgs) > 0 {
			for _, e := range x.Msgs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueuedMessageList)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Msgs) > 0 {
			for iNdEx := len(x.Msgs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Msgs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.EpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNumber))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueuedMessageList)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueuedMessageList: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueuedMessageList: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
				}
				x.EpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msgs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Msgs = append(x.Msgs, &QueuedMessage{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Msgs[len(x.Msgs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValStateUpdate              protoreflect.MessageDescriptor
	fd_ValStateUpdate_state        protoreflect.FieldDescriptor
	fd_ValStateUpdate_block_height protoreflect.FieldDescriptor
	fd_ValStateUpdate_block_time   protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_epoching_proto_init()
	md_ValStateUpdate = File_cosmos_epoching_v1_epoching_proto.Messages().ByName("ValStateUpdate")
	fd_ValStateUpdate_state = md_ValStateUpdate.Fields().ByName("state")
	fd_ValStateUpdate_block_height = md_ValStateUpdate.Fields().ByName("block_height")
	fd_ValStateUpdate_block_time = md_ValStateUpdate.Fields().ByName("block_time")
}

var _ protoreflect.Message = (*fastReflection_ValStateUpdate)(nil)

type fastReflection_ValStateUpdate ValStateUpdate

func (x *ValStateUpdate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValStateUpdate)(x)
}

func (x *ValStateUpdate) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValStateUpdate_messageType fastReflection_ValStateUpdate_messageType
var _ protoreflect.MessageType = fastReflection_ValStateUpdate_messageType{}

type fastReflection_ValStateUpdate_messageType struct{}

func (x fastReflection_ValStateUpdate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValStateUpdate)(nil)
}
func (x fastReflection_ValStateUpdate_messageType) New() protoreflect.Message {
	return new(fastReflection_ValStateUpdate)
}
func (x fastReflection_ValStateUpdate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValStateUpdate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValStateUpdate) Descriptor() protoreflect.MessageDescriptor {
	return md_ValStateUpdate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValStateUpdate) Type() protoreflect.MessageType {
	return _fastReflection_ValStateUpdate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValStateUpdate) New() protoreflect.Message {
	return new(fastReflection_ValStateUpdate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValStateUpdate) Interface() protoreflect.ProtoMessage {
	return (*ValStateUpdate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValStateUpdate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.State != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.State))
		if !f(fd_ValStateUpdate_state, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_ValStateUpdate_block_height, value) {
			return
		}
	}
	if x.BlockTime != nil {
		value := protoreflect.ValueOfMessage(x.BlockTime.ProtoReflect())
		if !f(fd_ValStateUpdate_block_time, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValStateUpdate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValStateUpdate.state":
		return x.State != 0
	case "cosmos.epoching.v1.ValStateUpdate.block_height":
		return x.BlockHeight != uint64(0)
	case "cosmos.epoching.v1.ValStateUpdate.block_time":
		return x.BlockTime != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValStateUpdate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValStateUpdate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValStateUpdate.state":
		x.State = 0
	case "cosmos.epoching.v1.ValStateUpdate.block_height":
		x.BlockHeight = uint64(0)
	case "cosmos.epoching.v1.ValStateUpdate.block_time":
		x.BlockTime = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValStateUpdate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValStateUpdate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.ValStateUpdate.state":
		value := x.State
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "cosmos.epoching.v1.ValStateUpdate.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.ValStateUpdate.block_time":
		value := x.BlockTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValStateUpdate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValStateUpdate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValStateUpdate.state":
		x.State = (BondState)(value.Enum())
	case "cosmos.epoching.v1.ValStateUpdate.block_height":
		x.BlockHeight = value.Uint()
	case "cosmos.epoching.v1.ValStateUpdate.block_time":
		x.BlockTime = value.Message().Interface().(*timestamppb.Timestamp)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValStateUpdate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValStateUpdate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValStateUpdate.block_time":
		if x.BlockTime == nil {
			x.BlockTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.BlockTime.ProtoReflect())
	case "cosmos.epoching.v1.ValStateUpdate.state":
		panic(fmt.Errorf("field state of message cosmos.epoching.v1.ValStateUpdate is not mutable"))
	case "cosmos.epoching.v1.ValStateUpdate.block_height":
		panic(fmt.Errorf("field block_height of message cosmos.epoching.v1.ValStateUpdate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValStateUpdate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValStateUpdate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValStateUpdate.state":
		return protoreflect.ValueOfEnum(0)
	case "cosmos.epoching.v1.ValStateUpdate.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.ValStateUpdate.block_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValStateUpdate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValStateUpdate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.ValStateUpdate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValStateUpdate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValStateUpdate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValStateUpdate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValStateUpdate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValStateUpdate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.State != 0 {
			n += 1 + runtime.Sov(uint64(x.State))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.BlockTime != nil {
			l = options.Size(x.BlockTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValStateUpdate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockTime != nil {
			encoded, err := options.Marshal(x.BlockTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x10
		}
		if x.State != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.State))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValStateUpdate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValStateUpdate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValStateUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
				}
				x.State = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.State |= BondState(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BlockTime == nil {
					x.BlockTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ValidatorLifecycle_2_list)(nil)

type _ValidatorLifecycle_2_list struct {
	list *[]*ValStateUpdate
}

func (x *_ValidatorLifecycle_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValidatorLifecycle_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValidatorLifecycle_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValStateUpdate)
	(*x.list)[i] = concreteValue
}

func (x *_ValidatorLifecycle_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ValStateUpdate)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValidatorLifecycle_2_list) AppendMutable() protoreflect.Value {
	v := new(ValStateUpdate)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValidatorLifecycle_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValidatorLifecycle_2_list) NewElement() protoreflect.Value {
	v := new(ValStateUpdate)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValidatorLifecycle_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ValidatorLifecycle          protoreflect.MessageDescriptor
	fd_ValidatorLifecycle_val_addr protoreflect.FieldDescriptor
	fd_ValidatorLifecycle_val_life protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_epoching_proto_init()
	md_ValidatorLifecycle = File_cosmos_epoching_v1_epoching_proto.Messages().ByName("ValidatorLifecycle")
	fd_ValidatorLifecycle_val_addr = md_ValidatorLifecycle.Fields().ByName("val_addr")
	fd_ValidatorLifecycle_val_life = md_ValidatorLifecycle.Fields().ByName("val_life")
}

var _ protoreflect.Message = (*fastReflection_ValidatorLifecycle)(nil)

type fastReflection_ValidatorLifecycle ValidatorLifecycle

func (x *ValidatorLifecycle) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidatorLifecycle)(x)
}

func (x *ValidatorLifecycle) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidatorLifecycle_messageType fastReflection_ValidatorLifecycle_messageType
var _ protoreflect.MessageType = fastReflection_ValidatorLifecycle_messageType{}

type fastReflection_ValidatorLifecycle_messageType struct{}

func (x fastReflection_ValidatorLifecycle_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidatorLifecycle)(nil)
}
func (x fastReflection_ValidatorLifecycle_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidatorLifecycle)
}
func (x fastReflection_ValidatorLifecycle_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidatorLifecycle
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidatorLifecycle) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidatorLifecycle
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidatorLifecycle) Type() protoreflect.MessageType {
	return _fastReflection_ValidatorLifecycle_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidatorLifecycle) New() protoreflect.Message {
	return new(fastReflection_ValidatorLifecycle)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidatorLifecycle) Interface() protoreflect.ProtoMessage {
	return (*ValidatorLifecycle)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidatorLifecycle) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ValAddr != "" {
		value := protoreflect.ValueOfString(x.ValAddr)
		if !f(fd_ValidatorLifecycle_val_addr, value) {
			return
		}
	}
	if len(x.ValLife) != 0 {
		value := protoreflect.ValueOfList(&_ValidatorLifecycle_2_list{list: &x.ValLife})
		if !f(fd_ValidatorLifecycle_val_life, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidatorLifecycle) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValidatorLifecycle.val_addr":
		return x.ValAddr != ""
	case "cosmos.epoching.v1.ValidatorLifecycle.val_life":
		return len(x.ValLife) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValidatorLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValidatorLifecycle does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorLifecycle) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValidatorLifecycle.val_addr":
		x.ValAddr = ""
	case "cosmos.epoching.v1.ValidatorLifecycle.val_life":
		x.ValLife = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValidatorLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValidatorLifecycle does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidatorLifecycle) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.ValidatorLifecycle.val_addr":
		value := x.ValAddr
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.ValidatorLifecycle.val_life":
		if len(x.ValLife) == 0 {
			return protoreflect.ValueOfList(&_ValidatorLifecycle_2_list{})
		}
		listValue := &_ValidatorLifecycle_2_list{list: &x.ValLife}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValidatorLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValidatorLifecycle does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorLifecycle) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValidatorLifecycle.val_addr":
		x.ValAddr = value.Interface().(string)
	case "cosmos.epoching.v1.ValidatorLifecycle.val_life":
		lv := value.List()
		clv := lv.(*_ValidatorLifecycle_2_list)
		x.ValLife = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValidatorLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValidatorLifecycle does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorLifecycle) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValidatorLifecycle.val_life":
		if x.ValLife == nil {
			x.ValLife = []*ValStateUpdate{}
		}
		value := &_ValidatorLifecycle_2_list{list: &x.ValLife}
		return protoreflect.ValueOfList(value)
	case "cosmos.epoching.v1.ValidatorLifecycle.val_addr":
		panic(fmt.Errorf("field val_addr of message cosmos.epoching.v1.ValidatorLifecycle is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValidatorLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValidatorLifecycle does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidatorLifecycle) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.ValidatorLifecycle.val_addr":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.ValidatorLifecycle.val_life":
		list := []*ValStateUpdate{}
		return protoreflect.ValueOfList(&_ValidatorLifecycle_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.ValidatorLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.ValidatorLifecycle does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidatorLifecycle) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.ValidatorLifecycle", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidatorLifecycle) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidatorLifecycle) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidatorLifecycle) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidatorLifecycle) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidatorLifecycle)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ValAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ValLife) > 0 {
			for _, e := range x.ValLife {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidatorLifecycle)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ValLife) > 0 {
			for iNdEx := len(x.ValLife) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ValLife[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.ValAddr) > 0 {
			i -= len(x.ValAddr)
			copy(dAtA[i:], x.ValAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValAddr)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidatorLifecycle)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidatorLifecycle: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidatorLifecycle: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValAddr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValAddr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValLife", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValLife = append(x.ValLife, &ValStateUpdate{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValLife[len(x.ValLife)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_DelegationStateUpdate              protoreflect.MessageDescriptor
	fd_DelegationStateUpdate_state        protoreflect.FieldDescriptor
	fd_DelegationStateUpdate_val_addr     protoreflect.FieldDescriptor
	fd_DelegationStateUpdate_block_height protoreflect.FieldDescriptor
	fd_DelegationStateUpdate_block_time   protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_epoching_proto_init()
	md_DelegationStateUpdate = File_cosmos_epoching_v1_epoching_proto.Messages().ByName("DelegationStateUpdate")
	fd_DelegationStateUpdate_state = md_DelegationStateUpdate.Fields().ByName("state")
	fd_DelegationStateUpdate_val_addr = md_DelegationStateUpdate.Fields().ByName("val_addr")
	fd_DelegationStateUpdate_block_height = md_DelegationStateUpdate.Fields().ByName("block_height")
	fd_DelegationStateUpdate_block_time = md_DelegationStateUpdate.Fields().ByName("block_time")
}

var _ protoreflect.Message = (*fastReflection_DelegationStateUpdate)(nil)

type fastReflection_DelegationStateUpdate DelegationStateUpdate

func (x *DelegationStateUpdate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegationStateUpdate)(x)
}

func (x *DelegationStateUpdate) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegationStateUpdate_messageType fastReflection_DelegationStateUpdate_messageType
var _ protoreflect.MessageType = fastReflection_DelegationStateUpdate_messageType{}

type fastReflection_DelegationStateUpdate_messageType struct{}

func (x fastReflection_DelegationStateUpdate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegationStateUpdate)(nil)
}
func (x fastReflection_DelegationStateUpdate_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegationStateUpdate)
}
func (x fastReflection_DelegationStateUpdate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationStateUpdate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegationStateUpdate) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationStateUpdate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegationStateUpdate) Type() protoreflect.MessageType {
	return _fastReflection_DelegationStateUpdate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegationStateUpdate) New() protoreflect.Message {
	return new(fastReflection_DelegationStateUpdate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegationStateUpdate) Interface() protoreflect.ProtoMessage {
	return (*DelegationStateUpdate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegationStateUpdate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.State != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.State))
		if !f(fd_DelegationStateUpdate_state, value) {
			return
		}
	}
	if x.ValAddr != "" {
		value := protoreflect.ValueOfString(x.ValAddr)
		if !f(fd_DelegationStateUpdate_val_addr, value) {
			return
		}
	}
	if x.BlockHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockHeight)
		if !f(fd_DelegationStateUpdate_block_height, value) {
			return
		}
	}
	if x.BlockTime != nil {
		value := protoreflect.ValueOfMessage(x.BlockTime.ProtoReflect())
		if !f(fd_DelegationStateUpdate_block_time, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegationStateUpdate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationStateUpdate.state":
		return x.State != 0
	case "cosmos.epoching.v1.DelegationStateUpdate.val_addr":
		return x.ValAddr != ""
	case "cosmos.epoching.v1.DelegationStateUpdate.block_height":
		return x.BlockHeight != uint64(0)
	case "cosmos.epoching.v1.DelegationStateUpdate.block_time":
		return x.BlockTime != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationStateUpdate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationStateUpdate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationStateUpdate.state":
		x.State = 0
	case "cosmos.epoching.v1.DelegationStateUpdate.val_addr":
		x.ValAddr = ""
	case "cosmos.epoching.v1.DelegationStateUpdate.block_height":
		x.BlockHeight = uint64(0)
	case "cosmos.epoching.v1.DelegationStateUpdate.block_time":
		x.BlockTime = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationStateUpdate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegationStateUpdate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.DelegationStateUpdate.state":
		value := x.State
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "cosmos.epoching.v1.DelegationStateUpdate.val_addr":
		value := x.ValAddr
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.DelegationStateUpdate.block_height":
		value := x.BlockHeight
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.DelegationStateUpdate.block_time":
		value := x.BlockTime
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationStateUpdate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationStateUpdate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationStateUpdate.state":
		x.State = (BondState)(value.Enum())
	case "cosmos.epoching.v1.DelegationStateUpdate.val_addr":
		x.ValAddr = value.Interface().(string)
	case "cosmos.epoching.v1.DelegationStateUpdate.block_height":
		x.BlockHeight = value.Uint()
	case "cosmos.epoching.v1.DelegationStateUpdate.block_time":
		x.BlockTime = value.Message().Interface().(*timestamppb.Timestamp)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationStateUpdate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationStateUpdate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationStateUpdate.block_time":
		if x.BlockTime == nil {
			x.BlockTime = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.BlockTime.ProtoReflect())
	case "cosmos.epoching.v1.DelegationStateUpdate.state":
		panic(fmt.Errorf("field state of message cosmos.epoching.v1.DelegationStateUpdate is not mutable"))
	case "cosmos.epoching.v1.DelegationStateUpdate.val_addr":
		panic(fmt.Errorf("field val_addr of message cosmos.epoching.v1.DelegationStateUpdate is not mutable"))
	case "cosmos.epoching.v1.DelegationStateUpdate.block_height":
		panic(fmt.Errorf("field block_height of message cosmos.epoching.v1.DelegationStateUpdate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationStateUpdate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegationStateUpdate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationStateUpdate.state":
		return protoreflect.ValueOfEnum(0)
	case "cosmos.epoching.v1.DelegationStateUpdate.val_addr":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.DelegationStateUpdate.block_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.DelegationStateUpdate.block_time":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationStateUpdate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationStateUpdate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegationStateUpdate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.DelegationStateUpdate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegationStateUpdate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationStateUpdate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegationStateUpdate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegationStateUpdate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegationStateUpdate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.State != 0 {
			n += 1 + runtime.Sov(uint64(x.State))
		}
		l = len(x.ValAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockHeight))
		}
		if x.BlockTime != nil {
			l = options.Size(x.BlockTime)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegationStateUpdate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.BlockTime != nil {
			encoded, err := options.Marshal(x.BlockTime)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.BlockHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockHeight))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ValAddr) > 0 {
			i -= len(x.ValAddr)
			copy(dAtA[i:], x.ValAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValAddr)))
			i--
			dAtA[i] = 0x12
		}
		if x.State != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.State))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegationStateUpdate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationStateUpdate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationStateUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
				}
				x.State = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.State |= BondState(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValAddr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValAddr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
				}
				x.BlockHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockTime", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.BlockTime == nil {
					x.BlockTime = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.BlockTime); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_DelegationLifecycle_2_list)(nil)

type _DelegationLifecycle_2_list struct {
	list *[]*DelegationStateUpdate
}

func (x *_DelegationLifecycle_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_DelegationLifecycle_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_DelegationLifecycle_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DelegationStateUpdate)
	(*x.list)[i] = concreteValue
}

func (x *_DelegationLifecycle_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*DelegationStateUpdate)
	*x.list = append(*x.list, concreteValue)
}

func (x *_DelegationLifecycle_2_list) AppendMutable() protoreflect.Value {
	v := new(DelegationStateUpdate)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationLifecycle_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_DelegationLifecycle_2_list) NewElement() protoreflect.Value {
	v := new(DelegationStateUpdate)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_DelegationLifecycle_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_DelegationLifecycle          protoreflect.MessageDescriptor
	fd_DelegationLifecycle_del_addr protoreflect.FieldDescriptor
	fd_DelegationLifecycle_del_life protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_epoching_proto_init()
	md_DelegationLifecycle = File_cosmos_epoching_v1_epoching_proto.Messages().ByName("DelegationLifecycle")
	fd_DelegationLifecycle_del_addr = md_DelegationLifecycle.Fields().ByName("del_addr")
	fd_DelegationLifecycle_del_life = md_DelegationLifecycle.Fields().ByName("del_life")
}

var _ protoreflect.Message = (*fastReflection_DelegationLifecycle)(nil)

type fastReflection_DelegationLifecycle DelegationLifecycle

func (x *DelegationLifecycle) ProtoReflect() protoreflect.Message {
	return (*fastReflection_DelegationLifecycle)(x)
}

func (x *DelegationLifecycle) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_DelegationLifecycle_messageType fastReflection_DelegationLifecycle_messageType
var _ protoreflect.MessageType = fastReflection_DelegationLifecycle_messageType{}

type fastReflection_DelegationLifecycle_messageType struct{}

func (x fastReflection_DelegationLifecycle_messageType) Zero() protoreflect.Message {
	return (*fastReflection_DelegationLifecycle)(nil)
}
func (x fastReflection_DelegationLifecycle_messageType) New() protoreflect.Message {
	return new(fastReflection_DelegationLifecycle)
}
func (x fastReflection_DelegationLifecycle_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationLifecycle
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_DelegationLifecycle) Descriptor() protoreflect.MessageDescriptor {
	return md_DelegationLifecycle
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_DelegationLifecycle) Type() protoreflect.MessageType {
	return _fastReflection_DelegationLifecycle_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_DelegationLifecycle) New() protoreflect.Message {
	return new(fastReflection_DelegationLifecycle)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_DelegationLifecycle) Interface() protoreflect.ProtoMessage {
	return (*DelegationLifecycle)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_DelegationLifecycle) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelAddr != "" {
		value := protoreflect.ValueOfString(x.DelAddr)
		if !f(fd_DelegationLifecycle_del_addr, value) {
			return
		}
	}
	if len(x.DelLife) != 0 {
		value := protoreflect.ValueOfList(&_DelegationLifecycle_2_list{list: &x.DelLife})
		if !f(fd_DelegationLifecycle_del_life, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_DelegationLifecycle) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationLifecycle.del_addr":
		return x.DelAddr != ""
	case "cosmos.epoching.v1.DelegationLifecycle.del_life":
		return len(x.DelLife) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationLifecycle does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationLifecycle) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationLifecycle.del_addr":
		x.DelAddr = ""
	case "cosmos.epoching.v1.DelegationLifecycle.del_life":
		x.DelLife = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationLifecycle does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_DelegationLifecycle) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.DelegationLifecycle.del_addr":
		value := x.DelAddr
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.DelegationLifecycle.del_life":
		if len(x.DelLife) == 0 {
			return protoreflect.ValueOfList(&_DelegationLifecycle_2_list{})
		}
		listValue := &_DelegationLifecycle_2_list{list: &x.DelLife}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationLifecycle does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationLifecycle) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationLifecycle.del_addr":
		x.DelAddr = value.Interface().(string)
	case "cosmos.epoching.v1.DelegationLifecycle.del_life":
		lv := value.List()
		clv := lv.(*_DelegationLifecycle_2_list)
		x.DelLife = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationLifecycle does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationLifecycle) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationLifecycle.del_life":
		if x.DelLife == nil {
			x.DelLife = []*DelegationStateUpdate{}
		}
		value := &_DelegationLifecycle_2_list{list: &x.DelLife}
		return protoreflect.ValueOfList(value)
	case "cosmos.epoching.v1.DelegationLifecycle.del_addr":
		panic(fmt.Errorf("field del_addr of message cosmos.epoching.v1.DelegationLifecycle is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationLifecycle does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_DelegationLifecycle) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.DelegationLifecycle.del_addr":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.DelegationLifecycle.del_life":
		list := []*DelegationStateUpdate{}
		return protoreflect.ValueOfList(&_DelegationLifecycle_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.DelegationLifecycle"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.DelegationLifecycle does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_DelegationLifecycle) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.DelegationLifecycle", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_DelegationLifecycle) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_DelegationLifecycle) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_DelegationLifecycle) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_DelegationLifecycle) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*DelegationLifecycle)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DelAddr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.DelLife) > 0 {
			for _, e := range x.DelLife {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*DelegationLifecycle)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.DelLife) > 0 {
			for iNdEx := len(x.DelLife) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DelLife[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.DelAddr) > 0 {
			i -= len(x.DelAddr)
			copy(dAtA[i:], x.DelAddr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DelAddr)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*DelegationLifecycle)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationLifecycle: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: DelegationLifecycle: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelAddr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelAddr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelLife", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelLife = append(x.DelLife, &DelegationStateUpdate{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DelLife[len(x.DelLife)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Validator       protoreflect.MessageDescriptor
	fd_Validator_addr  protoreflect.FieldDescriptor
	fd_Validator_power protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_epoching_proto_init()
	md_Validator = File_cosmos_epoching_v1_epoching_proto.Messages().ByName("Validator")
	fd_Validator_addr = md_Validator.Fields().ByName("addr")
	fd_Validator_power = md_Validator.Fields().ByName("power")
}

var _ protoreflect.Message = (*fastReflection_Validator)(nil)

type fastReflection_Validator Validator

func (x *Validator) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Validator)(x)
}

func (x *Validator) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Validator_messageType fastReflection_Validator_messageType
var _ protoreflect.MessageType = fastReflection_Validator_messageType{}

type fastReflection_Validator_messageType struct{}

func (x fastReflection_Validator_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Validator)(nil)
}
func (x fastReflection_Validator_messageType) New() protoreflect.Message {
	return new(fastReflection_Validator)
}
func (x fastReflection_Validator_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Validator
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Validator) Descriptor() protoreflect.MessageDescriptor {
	return md_Validator
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Validator) Type() protoreflect.MessageType {
	return _fastReflection_Validator_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Validator) New() protoreflect.Message {
	return new(fastReflection_Validator)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Validator) Interface() protoreflect.ProtoMessage {
	return (*Validator)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Validator) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Addr) != 0 {
		value := protoreflect.ValueOfBytes(x.Addr)
		if !f(fd_Validator_addr, value) {
			return
		}
	}
	if x.Power != int64(0) {
		value := protoreflect.ValueOfInt64(x.Power)
		if !f(fd_Validator_power, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Validator) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Validator.addr":
		return len(x.Addr) != 0
	case "cosmos.epoching.v1.Validator.power":
		return x.Power != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Validator"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validator) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Validator.addr":
		x.Addr = nil
	case "cosmos.epoching.v1.Validator.power":
		x.Power = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Validator"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Validator) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.Validator.addr":
		value := x.Addr
		return protoreflect.ValueOfBytes(value)
	case "cosmos.epoching.v1.Validator.power":
		value := x.Power
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Validator"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Validator does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validator) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Validator.addr":
		x.Addr = value.Bytes()
	case "cosmos.epoching.v1.Validator.power":
		x.Power = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Validator"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validator) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Validator.addr":
		panic(fmt.Errorf("field addr of message cosmos.epoching.v1.Validator is not mutable"))
	case "cosmos.epoching.v1.Validator.power":
		panic(fmt.Errorf("field power of message cosmos.epoching.v1.Validator is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Validator"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Validator) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.Validator.addr":
		return protoreflect.ValueOfBytes(nil)
	case "cosmos.epoching.v1.Validator.power":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.Validator"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.Validator does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Validator) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.Validator", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Validator) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Validator) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Validator) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Validator) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Validator)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Addr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Power != 0 {
			n += 1 + runtime.Sov(uint64(x.Power))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Validator)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Power != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Power))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Addr) > 0 {
			i -= len(x.Addr)
			copy(dAtA[i:], x.Addr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addr)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Validator)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Validator: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Validator: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addr = append(x.Addr[:0], dAtA[iNdEx:postIndex]...)
				if x.Addr == nil {
					x.Addr = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
				}
				x.Power = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Power |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cosmos/epoching/v1/epoching.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BondState is the bond state of a validator or delegation
type BondState int32

const (
	// CREATED is when the validator/delegation has been created
	BondState_CREATED BondState = 0
	// CREATED is when the validator/delegation has become bonded
	BondState_BONDED BondState = 1
	// CREATED is when the validator/delegation has become unbonding
	BondState_UNBONDING BondState = 2
	// CREATED is when the validator/delegation has become unbonded
	BondState_UNBONDED BondState = 3
	// CREATED is when the validator/delegation has been removed
	BondState_REMOVED BondState = 4
)

// Enum value maps for BondState.
var (
	BondState_name = map[int32]string{
		0: "CREATED",
		1: "BONDED",
		2: "UNBONDING",
		3: "UNBONDED",
		4: "REMOVED",
	}
	BondState_value = map[string]int32{
		"CREATED":   0,
		"BONDED":    1,
		"UNBONDING": 2,
		"UNBONDED":  3,
		"REMOVED":   4,
	}
)

func (x BondState) Enum() *BondState {
	p := new(BondState)
	*p = x
	return p
}

func (x BondState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BondState) Descriptor() protoreflect.EnumDescriptor {
	return file_cosmos_epoching_v1_epoching_proto_enumTypes[0].Descriptor()
}

func (BondState) Type() protoreflect.EnumType {
	return &file_cosmos_epoching_v1_epoching_proto_enumTypes[0]
}

func (x BondState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BondState.Descriptor instead.
func (BondState) EnumDescriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{0}
}

// Epoch is a structure that contains the metadata of an epoch
type Epoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber          uint64 `protobuf:"varint,1,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
	CurrentEpochInterval uint64 `protobuf:"varint,2,opt,name=current_epoch_interval,json=currentEpochInterval,proto3" json:"current_epoch_interval,omitempty"`
	FirstBlockHeight     uint64 `protobuf:"varint,3,opt,name=first_block_height,json=firstBlockHeight,proto3" json:"first_block_height,omitempty"`
	// last_block_header is the header of the last block in this epoch.
	// Babylon needs to remember the last header of each epoch to complete
	// unbonding validators/delegations when a previous epoch's checkpoint is
	// finalised. The last_block_header field is nil in the epoch's beginning, and
	// is set upon the end of this epoch.
	LastBlockHeader *types.Header `protobuf:"bytes,4,opt,name=last_block_header,json=lastBlockHeader,proto3" json:"last_block_header,omitempty"`
	// app_hash_root is the Merkle root of all AppHashs in this epoch
	// It will be used for proving a block is in an epoch
	AppHashRoot []byte `protobuf:"bytes,5,opt,name=app_hash_root,json=appHashRoot,proto3" json:"app_hash_root,omitempty"`
	// sealer_header is the 2nd header of the next epoch
	// This validator set has generated a BLS multisig on `last_commit_hash` of
	// the sealer header
	SealerHeader *types.Header `protobuf:"bytes,6,opt,name=sealer_header,json=sealerHeader,proto3" json:"sealer_header,omitempty"`
}

func (x *Epoch) Reset() {
	*x = Epoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Epoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Epoch) ProtoMessage() {}

// Deprecated: Use Epoch.ProtoReflect.Descriptor instead.
func (*Epoch) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{0}
}

func (x *Epoch) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *Epoch) GetCurrentEpochInterval() uint64 {
	if x != nil {
		return x.CurrentEpochInterval
	}
	return 0
}

func (x *Epoch) GetFirstBlockHeight() uint64 {
	if x != nil {
		return x.FirstBlockHeight
	}
	return 0
}

func (x *Epoch) GetLastBlockHeader() *types.Header {
	if x != nil {
		return x.LastBlockHeader
	}
	return nil
}

func (x *Epoch) GetAppHashRoot() []byte {
	if x != nil {
		return x.AppHashRoot
	}
	return nil
}

func (x *Epoch) GetSealerHeader() *types.Header {
	if x != nil {
		return x.SealerHeader
	}
	return nil
}

// QueuedMessage is a message that can change the validator set and is delayed
// to the epoch boundary
type QueuedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tx_id is the ID of the tx that contains the message
	TxId []byte `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	// msg_id is the original message ID, i.e., hash of the marshaled message
	MsgId []byte `protobuf:"bytes,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	// block_height is the height when this msg is submitted to Babylon
	BlockHeight uint64 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// block_time is the timestamp when this msg is submitted to Babylon
	BlockTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	// msg is the actual message that is sent by a user and is queued by the
	// epoching module
	//
	// Types that are assignable to Msg:
	//
	//	*QueuedMessage_MsgCreateValidator
	//	*QueuedMessage_MsgDelegate
	//	*QueuedMessage_MsgUndelegate
	//	*QueuedMessage_MsgBeginRedelegate
	Msg isQueuedMessage_Msg `protobuf_oneof:"msg"`
}

func (x *QueuedMessage) Reset() {
	*x = QueuedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueuedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuedMessage) ProtoMessage() {}

// Deprecated: Use QueuedMessage.ProtoReflect.Descriptor instead.
func (*QueuedMessage) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{1}
}

func (x *QueuedMessage) GetTxId() []byte {
	if x != nil {
		return x.TxId
	}
	return nil
}

func (x *QueuedMessage) GetMsgId() []byte {
	if x != nil {
		return x.MsgId
	}
	return nil
}

func (x *QueuedMessage) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *QueuedMessage) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

func (x *QueuedMessage) GetMsg() isQueuedMessage_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *QueuedMessage) GetMsgCreateValidator() *v1beta1.MsgCreateValidator {
	if x, ok := x.GetMsg().(*QueuedMessage_MsgCreateValidator); ok {
		return x.MsgCreateValidator
	}
	return nil
}

func (x *QueuedMessage) GetMsgDelegate() *v1beta1.MsgDelegate {
	if x, ok := x.GetMsg().(*QueuedMessage_MsgDelegate); ok {
		return x.MsgDelegate
	}
	return nil
}

func (x *QueuedMessage) GetMsgUndelegate() *v1beta1.MsgUndelegate {
	if x, ok := x.GetMsg().(*QueuedMessage_MsgUndelegate); ok {
		return x.MsgUndelegate
	}
	return nil
}

func (x *QueuedMessage) GetMsgBeginRedelegate() *v1beta1.MsgBeginRedelegate {
	if x, ok := x.GetMsg().(*QueuedMessage_MsgBeginRedelegate); ok {
		return x.MsgBeginRedelegate
	}
	return nil
}

type isQueuedMessage_Msg interface {
	isQueuedMessage_Msg()
}

type QueuedMessage_MsgCreateValidator struct {
	MsgCreateValidator *v1beta1.MsgCreateValidator `protobuf:"bytes,5,opt,name=msg_create_validator,json=msgCreateValidator,proto3,oneof"`
}

type QueuedMessage_MsgDelegate struct {
	MsgDelegate *v1beta1.MsgDelegate `protobuf:"bytes,6,opt,name=msg_delegate,json=msgDelegate,proto3,oneof"`
}

type QueuedMessage_MsgUndelegate struct {
	MsgUndelegate *v1beta1.MsgUndelegate `protobuf:"bytes,7,opt,name=msg_undelegate,json=msgUndelegate,proto3,oneof"`
}

type QueuedMessage_MsgBeginRedelegate struct {
	MsgBeginRedelegate *v1beta1.MsgBeginRedelegate `protobuf:"bytes,8,opt,name=msg_begin_redelegate,json=msgBeginRedelegate,proto3,oneof"` // TODO: after we bump to Cosmos SDK v0.46, add MsgCancelUnbondingDelegation
}

func (*QueuedMessage_MsgCreateValidator) isQueuedMessage_Msg() {}

func (*QueuedMessage_MsgDelegate) isQueuedMessage_Msg() {}

func (*QueuedMessage_MsgUndelegate) isQueuedMessage_Msg() {}

func (*QueuedMessage_MsgBeginRedelegate) isQueuedMessage_Msg() {}

// QueuedMessageList is a message that contains a list of staking-related
// messages queued for an epoch
type QueuedMessageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber uint64           `protobuf:"varint,1,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
	Msgs        []*QueuedMessage `protobuf:"bytes,2,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *QueuedMessageList) Reset() {
	*x = QueuedMessageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueuedMessageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuedMessageList) ProtoMessage() {}

// Deprecated: Use QueuedMessageList.ProtoReflect.Descriptor instead.
func (*QueuedMessageList) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{2}
}

func (x *QueuedMessageList) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *QueuedMessageList) GetMsgs() []*QueuedMessage {
	if x != nil {
		return x.Msgs
	}
	return nil
}

// ValStateUpdate is a messages that records a state update of a validator
type ValStateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       BondState              `protobuf:"varint,1,opt,name=state,proto3,enum=cosmos.epoching.v1.BondState" json:"state,omitempty"`
	BlockHeight uint64                 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
}

func (x *ValStateUpdate) Reset() {
	*x = ValStateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValStateUpdate) ProtoMessage() {}

// Deprecated: Use ValStateUpdate.ProtoReflect.Descriptor instead.
func (*ValStateUpdate) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{3}
}

func (x *ValStateUpdate) GetState() BondState {
	if x != nil {
		return x.State
	}
	return BondState_CREATED
}

func (x *ValStateUpdate) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *ValStateUpdate) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

// ValidatorLifecycle is a message that records records the lifecycle of
// a validator
type ValidatorLifecycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValAddr string            `protobuf:"bytes,1,opt,name=val_addr,json=valAddr,proto3" json:"val_addr,omitempty"`
	ValLife []*ValStateUpdate `protobuf:"bytes,2,rep,name=val_life,json=valLife,proto3" json:"val_life,omitempty"`
}

func (x *ValidatorLifecycle) Reset() {
	*x = ValidatorLifecycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorLifecycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorLifecycle) ProtoMessage() {}

// Deprecated: Use ValidatorLifecycle.ProtoReflect.Descriptor instead.
func (*ValidatorLifecycle) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{4}
}

func (x *ValidatorLifecycle) GetValAddr() string {
	if x != nil {
		return x.ValAddr
	}
	return ""
}

func (x *ValidatorLifecycle) GetValLife() []*ValStateUpdate {
	if x != nil {
		return x.ValLife
	}
	return nil
}

// DelegationStateUpdate is the message that records a state update of a
// delegation
type DelegationStateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       BondState              `protobuf:"varint,1,opt,name=state,proto3,enum=cosmos.epoching.v1.BondState" json:"state,omitempty"`
	ValAddr     string                 `protobuf:"bytes,2,opt,name=val_addr,json=valAddr,proto3" json:"val_addr,omitempty"`
	BlockHeight uint64                 `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
}

func (x *DelegationStateUpdate) Reset() {
	*x = DelegationStateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegationStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationStateUpdate) ProtoMessage() {}

// Deprecated: Use DelegationStateUpdate.ProtoReflect.Descriptor instead.
func (*DelegationStateUpdate) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{5}
}

func (x *DelegationStateUpdate) GetState() BondState {
	if x != nil {
		return x.State
	}
	return BondState_CREATED
}

func (x *DelegationStateUpdate) GetValAddr() string {
	if x != nil {
		return x.ValAddr
	}
	return ""
}

func (x *DelegationStateUpdate) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *DelegationStateUpdate) GetBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

// ValidatorLifecycle is a message that records records the lifecycle of
// a delegation
type DelegationLifecycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelAddr string                   `protobuf:"bytes,1,opt,name=del_addr,json=delAddr,proto3" json:"del_addr,omitempty"`
	DelLife []*DelegationStateUpdate `protobuf:"bytes,2,rep,name=del_life,json=delLife,proto3" json:"del_life,omitempty"`
}

func (x *DelegationLifecycle) Reset() {
	*x = DelegationLifecycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegationLifecycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationLifecycle) ProtoMessage() {}

// Deprecated: Use DelegationLifecycle.ProtoReflect.Descriptor instead.
func (*DelegationLifecycle) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{6}
}

func (x *DelegationLifecycle) GetDelAddr() string {
	if x != nil {
		return x.DelAddr
	}
	return ""
}

func (x *DelegationLifecycle) GetDelLife() []*DelegationStateUpdate {
	if x != nil {
		return x.DelLife
	}
	return nil
}

// Validator is a message that denotes a validator
type Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// addr is the validator's address (in sdk.ValAddress)
	Addr []byte `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// power is the validator's voting power
	Power int64 `protobuf:"varint,2,opt,name=power,proto3" json:"power,omitempty"`
}

func (x *Validator) Reset() {
	*x = Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_epoching_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_epoching_proto_rawDescGZIP(), []int{7}
}

func (x *Validator) GetAddr() []byte {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *Validator) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

var File_cosmos_epoching_v1_epoching_proto protoreflect.FileDescriptor

var file_cosmos_epoching_v1_epoching_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x02,
	0x0a, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x44,
	0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x6c,
	0x65, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x6c, 0x65,
	0x72, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x80, 0x04, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x6d, 0x73, 0x67,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x0c, 0x6d, 0x73, 0x67,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x12, 0x6d, 0x73, 0x67, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6d, 0x0a, 0x11, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x35, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x0e, 0x56, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76,
	0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x5f, 0x6c, 0x69,
	0x66, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x76, 0x61,
	0x6c, 0x4c, 0x69, 0x66, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x04, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x66,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x66, 0x65, 0x22, 0x35, 0x0a, 0x09, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x2a, 0x4e, 0x0a, 0x09, 0x42, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x4f, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x42, 0x4f,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4e, 0x42, 0x4f, 0x4e,
	0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44,
	0x10, 0x04, 0x42, 0xc1, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x45,
	0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x3b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x43, 0x45, 0x58, 0xaa, 0x02, 0x12, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x43, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5c, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x1e, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5c, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x14, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmos_epoching_v1_epoching_proto_rawDescOnce sync.Once
	file_cosmos_epoching_v1_epoching_proto_rawDescData = file_cosmos_epoching_v1_epoching_proto_rawDesc
)

func file_cosmos_epoching_v1_epoching_proto_rawDescGZIP() []byte {
	file_cosmos_epoching_v1_epoching_proto_rawDescOnce.Do(func() {
		file_cosmos_epoching_v1_epoching_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmos_epoching_v1_epoching_proto_rawDescData)
	})
	return file_cosmos_epoching_v1_epoching_proto_rawDescData
}

var file_cosmos_epoching_v1_epoching_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cosmos_epoching_v1_epoching_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_cosmos_epoching_v1_epoching_proto_goTypes = []interface{}{
	(BondState)(0),                     // 0: cosmos.epoching.v1.BondState
	(*Epoch)(nil),                      // 1: cosmos.epoching.v1.Epoch
	(*QueuedMessage)(nil),              // 2: cosmos.epoching.v1.QueuedMessage
	(*QueuedMessageList)(nil),          // 3: cosmos.epoching.v1.QueuedMessageList
	(*ValStateUpdate)(nil),             // 4: cosmos.epoching.v1.ValStateUpdate
	(*ValidatorLifecycle)(nil),         // 5: cosmos.epoching.v1.ValidatorLifecycle
	(*DelegationStateUpdate)(nil),      // 6: cosmos.epoching.v1.DelegationStateUpdate
	(*DelegationLifecycle)(nil),        // 7: cosmos.epoching.v1.DelegationLifecycle
	(*Validator)(nil),                  // 8: cosmos.epoching.v1.Validator
	(*types.Header)(nil),               // 9: tendermint.types.Header
	(*timestamppb.Timestamp)(nil),      // 10: google.protobuf.Timestamp
	(*v1beta1.MsgCreateValidator)(nil), // 11: cosmos.staking.v1beta1.MsgCreateValidator
	(*v1beta1.MsgDelegate)(nil),        // 12: cosmos.staking.v1beta1.MsgDelegate
	(*v1beta1.MsgUndelegate)(nil),      // 13: cosmos.staking.v1beta1.MsgUndelegate
	(*v1beta1.MsgBeginRedelegate)(nil), // 14: cosmos.staking.v1beta1.MsgBeginRedelegate
}
var file_cosmos_epoching_v1_epoching_proto_depIdxs = []int32{
	9,  // 0: cosmos.epoching.v1.Epoch.last_block_header:type_name -> tendermint.types.Header
	9,  // 1: cosmos.epoching.v1.Epoch.sealer_header:type_name -> tendermint.types.Header
	10, // 2: cosmos.epoching.v1.QueuedMessage.block_time:type_name -> google.protobuf.Timestamp
	11, // 3: cosmos.epoching.v1.QueuedMessage.msg_create_validator:type_name -> cosmos.staking.v1beta1.MsgCreateValidator
	12, // 4: cosmos.epoching.v1.QueuedMessage.msg_delegate:type_name -> cosmos.staking.v1beta1.MsgDelegate
	13, // 5: cosmos.epoching.v1.QueuedMessage.msg_undelegate:type_name -> cosmos.staking.v1beta1.MsgUndelegate
	14, // 6: cosmos.epoching.v1.QueuedMessage.msg_begin_redelegate:type_name -> cosmos.staking.v1beta1.MsgBeginRedelegate
	2,  // 7: cosmos.epoching.v1.QueuedMessageList.msgs:type_name -> cosmos.epoching.v1.QueuedMessage
	0,  // 8: cosmos.epoching.v1.ValStateUpdate.state:type_name -> cosmos.epoching.v1.BondState
	10, // 9: cosmos.epoching.v1.ValStateUpdate.block_time:type_name -> google.protobuf.Timestamp
	4,  // 10: cosmos.epoching.v1.ValidatorLifecycle.val_life:type_name -> cosmos.epoching.v1.ValStateUpdate
	0,  // 11: cosmos.epoching.v1.DelegationStateUpdate.state:type_name -> cosmos.epoching.v1.BondState
	10, // 12: cosmos.epoching.v1.DelegationStateUpdate.block_time:type_name -> google.protobuf.Timestamp
	6,  // 13: cosmos.epoching.v1.DelegationLifecycle.del_life:type_name -> cosmos.epoching.v1.DelegationStateUpdate
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_cosmos_epoching_v1_epoching_proto_init() }
func file_cosmos_epoching_v1_epoching_proto_init() {
	if File_cosmos_epoching_v1_epoching_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cosmos_epoching_v1_epoching_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Epoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_epoching_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueuedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_epoching_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueuedMessageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_epoching_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValStateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_epoching_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorLifecycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_epoching_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegationStateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_epoching_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegationLifecycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_epoching_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cosmos_epoching_v1_epoching_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*QueuedMessage_MsgCreateValidator)(nil),
		(*QueuedMessage_MsgDelegate)(nil),
		(*QueuedMessage_MsgUndelegate)(nil),
		(*QueuedMessage_MsgBeginRedelegate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmos_epoching_v1_epoching_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmos_epoching_v1_epoching_proto_goTypes,
		DependencyIndexes: file_cosmos_epoching_v1_epoching_proto_depIdxs,
		EnumInfos:         file_cosmos_epoching_v1_epoching_proto_enumTypes,
		MessageInfos:      file_cosmos_epoching_v1_epoching_proto_msgTypes,
	}.Build()
	File_cosmos_epoching_v1_epoching_proto = out.File
	file_cosmos_epoching_v1_epoching_proto_rawDesc = nil
	file_cosmos_epoching_v1_epoching_proto_goTypes = nil
	file_cosmos_epoching_v1_epoching_proto_depIdxs = nil
}
