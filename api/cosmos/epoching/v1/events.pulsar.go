// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package epochingv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_EventBeginEpoch              protoreflect.MessageDescriptor
	fd_EventBeginEpoch_epoch_number protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_events_proto_init()
	md_EventBeginEpoch = File_cosmos_epoching_v1_events_proto.Messages().ByName("EventBeginEpoch")
	fd_EventBeginEpoch_epoch_number = md_EventBeginEpoch.Fields().ByName("epoch_number")
}

var _ protoreflect.Message = (*fastReflection_EventBeginEpoch)(nil)

type fastReflection_EventBeginEpoch EventBeginEpoch

func (x *EventBeginEpoch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventBeginEpoch)(x)
}

func (x *EventBeginEpoch) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventBeginEpoch_messageType fastReflection_EventBeginEpoch_messageType
var _ protoreflect.MessageType = fastReflection_EventBeginEpoch_messageType{}

type fastReflection_EventBeginEpoch_messageType struct{}

func (x fastReflection_EventBeginEpoch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventBeginEpoch)(nil)
}
func (x fastReflection_EventBeginEpoch_messageType) New() protoreflect.Message {
	return new(fastReflection_EventBeginEpoch)
}
func (x fastReflection_EventBeginEpoch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventBeginEpoch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventBeginEpoch) Descriptor() protoreflect.MessageDescriptor {
	return md_EventBeginEpoch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventBeginEpoch) Type() protoreflect.MessageType {
	return _fastReflection_EventBeginEpoch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventBeginEpoch) New() protoreflect.Message {
	return new(fastReflection_EventBeginEpoch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventBeginEpoch) Interface() protoreflect.ProtoMessage {
	return (*EventBeginEpoch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventBeginEpoch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNumber)
		if !f(fd_EventBeginEpoch_epoch_number, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventBeginEpoch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventBeginEpoch.epoch_number":
		return x.EpochNumber != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventBeginEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventBeginEpoch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBeginEpoch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventBeginEpoch.epoch_number":
		x.EpochNumber = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventBeginEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventBeginEpoch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventBeginEpoch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.EventBeginEpoch.epoch_number":
		value := x.EpochNumber
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventBeginEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventBeginEpoch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBeginEpoch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventBeginEpoch.epoch_number":
		x.EpochNumber = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventBeginEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventBeginEpoch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBeginEpoch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventBeginEpoch.epoch_number":
		panic(fmt.Errorf("field epoch_number of message cosmos.epoching.v1.EventBeginEpoch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventBeginEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventBeginEpoch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventBeginEpoch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventBeginEpoch.epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventBeginEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventBeginEpoch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventBeginEpoch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.EventBeginEpoch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventBeginEpoch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventBeginEpoch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventBeginEpoch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventBeginEpoch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventBeginEpoch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNumber))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventBeginEpoch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNumber))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventBeginEpoch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventBeginEpoch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventBeginEpoch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
				}
				x.EpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventEndEpoch              protoreflect.MessageDescriptor
	fd_EventEndEpoch_epoch_number protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_events_proto_init()
	md_EventEndEpoch = File_cosmos_epoching_v1_events_proto.Messages().ByName("EventEndEpoch")
	fd_EventEndEpoch_epoch_number = md_EventEndEpoch.Fields().ByName("epoch_number")
}

var _ protoreflect.Message = (*fastReflection_EventEndEpoch)(nil)

type fastReflection_EventEndEpoch EventEndEpoch

func (x *EventEndEpoch) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventEndEpoch)(x)
}

func (x *EventEndEpoch) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventEndEpoch_messageType fastReflection_EventEndEpoch_messageType
var _ protoreflect.MessageType = fastReflection_EventEndEpoch_messageType{}

type fastReflection_EventEndEpoch_messageType struct{}

func (x fastReflection_EventEndEpoch_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventEndEpoch)(nil)
}
func (x fastReflection_EventEndEpoch_messageType) New() protoreflect.Message {
	return new(fastReflection_EventEndEpoch)
}
func (x fastReflection_EventEndEpoch_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventEndEpoch
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventEndEpoch) Descriptor() protoreflect.MessageDescriptor {
	return md_EventEndEpoch
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventEndEpoch) Type() protoreflect.MessageType {
	return _fastReflection_EventEndEpoch_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventEndEpoch) New() protoreflect.Message {
	return new(fastReflection_EventEndEpoch)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventEndEpoch) Interface() protoreflect.ProtoMessage {
	return (*EventEndEpoch)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventEndEpoch) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNumber)
		if !f(fd_EventEndEpoch_epoch_number, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventEndEpoch) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventEndEpoch.epoch_number":
		return x.EpochNumber != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventEndEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventEndEpoch does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventEndEpoch) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventEndEpoch.epoch_number":
		x.EpochNumber = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventEndEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventEndEpoch does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventEndEpoch) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.EventEndEpoch.epoch_number":
		value := x.EpochNumber
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventEndEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventEndEpoch does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventEndEpoch) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventEndEpoch.epoch_number":
		x.EpochNumber = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventEndEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventEndEpoch does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventEndEpoch) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventEndEpoch.epoch_number":
		panic(fmt.Errorf("field epoch_number of message cosmos.epoching.v1.EventEndEpoch is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventEndEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventEndEpoch does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventEndEpoch) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventEndEpoch.epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventEndEpoch"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventEndEpoch does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventEndEpoch) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.EventEndEpoch", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventEndEpoch) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventEndEpoch) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventEndEpoch) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventEndEpoch) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventEndEpoch)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNumber))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventEndEpoch)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNumber))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventEndEpoch)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventEndEpoch: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventEndEpoch: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
				}
				x.EpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventHandleQueuedMsg_6_list)(nil)

type _EventHandleQueuedMsg_6_list struct {
	list *[][]byte
}

func (x *_EventHandleQueuedMsg_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventHandleQueuedMsg_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_EventHandleQueuedMsg_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventHandleQueuedMsg_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventHandleQueuedMsg_6_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventHandleQueuedMsg at list field OriginalAttributes as it is not of Message kind"))
}

func (x *_EventHandleQueuedMsg_6_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventHandleQueuedMsg_6_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_EventHandleQueuedMsg_6_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventHandleQueuedMsg                     protoreflect.MessageDescriptor
	fd_EventHandleQueuedMsg_original_event_type protoreflect.FieldDescriptor
	fd_EventHandleQueuedMsg_epoch_number        protoreflect.FieldDescriptor
	fd_EventHandleQueuedMsg_height              protoreflect.FieldDescriptor
	fd_EventHandleQueuedMsg_tx_id               protoreflect.FieldDescriptor
	fd_EventHandleQueuedMsg_msg_id              protoreflect.FieldDescriptor
	fd_EventHandleQueuedMsg_original_attributes protoreflect.FieldDescriptor
	fd_EventHandleQueuedMsg_error               protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_events_proto_init()
	md_EventHandleQueuedMsg = File_cosmos_epoching_v1_events_proto.Messages().ByName("EventHandleQueuedMsg")
	fd_EventHandleQueuedMsg_original_event_type = md_EventHandleQueuedMsg.Fields().ByName("original_event_type")
	fd_EventHandleQueuedMsg_epoch_number = md_EventHandleQueuedMsg.Fields().ByName("epoch_number")
	fd_EventHandleQueuedMsg_height = md_EventHandleQueuedMsg.Fields().ByName("height")
	fd_EventHandleQueuedMsg_tx_id = md_EventHandleQueuedMsg.Fields().ByName("tx_id")
	fd_EventHandleQueuedMsg_msg_id = md_EventHandleQueuedMsg.Fields().ByName("msg_id")
	fd_EventHandleQueuedMsg_original_attributes = md_EventHandleQueuedMsg.Fields().ByName("original_attributes")
	fd_EventHandleQueuedMsg_error = md_EventHandleQueuedMsg.Fields().ByName("error")
}

var _ protoreflect.Message = (*fastReflection_EventHandleQueuedMsg)(nil)

type fastReflection_EventHandleQueuedMsg EventHandleQueuedMsg

func (x *EventHandleQueuedMsg) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventHandleQueuedMsg)(x)
}

func (x *EventHandleQueuedMsg) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventHandleQueuedMsg_messageType fastReflection_EventHandleQueuedMsg_messageType
var _ protoreflect.MessageType = fastReflection_EventHandleQueuedMsg_messageType{}

type fastReflection_EventHandleQueuedMsg_messageType struct{}

func (x fastReflection_EventHandleQueuedMsg_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventHandleQueuedMsg)(nil)
}
func (x fastReflection_EventHandleQueuedMsg_messageType) New() protoreflect.Message {
	return new(fastReflection_EventHandleQueuedMsg)
}
func (x fastReflection_EventHandleQueuedMsg_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventHandleQueuedMsg
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventHandleQueuedMsg) Descriptor() protoreflect.MessageDescriptor {
	return md_EventHandleQueuedMsg
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventHandleQueuedMsg) Type() protoreflect.MessageType {
	return _fastReflection_EventHandleQueuedMsg_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventHandleQueuedMsg) New() protoreflect.Message {
	return new(fastReflection_EventHandleQueuedMsg)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventHandleQueuedMsg) Interface() protoreflect.ProtoMessage {
	return (*EventHandleQueuedMsg)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventHandleQueuedMsg) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.OriginalEventType != "" {
		value := protoreflect.ValueOfString(x.OriginalEventType)
		if !f(fd_EventHandleQueuedMsg_original_event_type, value) {
			return
		}
	}
	if x.EpochNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochNumber)
		if !f(fd_EventHandleQueuedMsg_epoch_number, value) {
			return
		}
	}
	if x.Height != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Height)
		if !f(fd_EventHandleQueuedMsg_height, value) {
			return
		}
	}
	if len(x.TxId) != 0 {
		value := protoreflect.ValueOfBytes(x.TxId)
		if !f(fd_EventHandleQueuedMsg_tx_id, value) {
			return
		}
	}
	if len(x.MsgId) != 0 {
		value := protoreflect.ValueOfBytes(x.MsgId)
		if !f(fd_EventHandleQueuedMsg_msg_id, value) {
			return
		}
	}
	if len(x.OriginalAttributes) != 0 {
		value := protoreflect.ValueOfList(&_EventHandleQueuedMsg_6_list{list: &x.OriginalAttributes})
		if !f(fd_EventHandleQueuedMsg_original_attributes, value) {
			return
		}
	}
	if x.Error != "" {
		value := protoreflect.ValueOfString(x.Error)
		if !f(fd_EventHandleQueuedMsg_error, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventHandleQueuedMsg) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_event_type":
		return x.OriginalEventType != ""
	case "cosmos.epoching.v1.EventHandleQueuedMsg.epoch_number":
		return x.EpochNumber != uint64(0)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.height":
		return x.Height != uint64(0)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.tx_id":
		return len(x.TxId) != 0
	case "cosmos.epoching.v1.EventHandleQueuedMsg.msg_id":
		return len(x.MsgId) != 0
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_attributes":
		return len(x.OriginalAttributes) != 0
	case "cosmos.epoching.v1.EventHandleQueuedMsg.error":
		return x.Error != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventHandleQueuedMsg"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventHandleQueuedMsg does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventHandleQueuedMsg) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_event_type":
		x.OriginalEventType = ""
	case "cosmos.epoching.v1.EventHandleQueuedMsg.epoch_number":
		x.EpochNumber = uint64(0)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.height":
		x.Height = uint64(0)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.tx_id":
		x.TxId = nil
	case "cosmos.epoching.v1.EventHandleQueuedMsg.msg_id":
		x.MsgId = nil
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_attributes":
		x.OriginalAttributes = nil
	case "cosmos.epoching.v1.EventHandleQueuedMsg.error":
		x.Error = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventHandleQueuedMsg"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventHandleQueuedMsg does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventHandleQueuedMsg) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_event_type":
		value := x.OriginalEventType
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.epoch_number":
		value := x.EpochNumber
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.height":
		value := x.Height
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.tx_id":
		value := x.TxId
		return protoreflect.ValueOfBytes(value)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.msg_id":
		value := x.MsgId
		return protoreflect.ValueOfBytes(value)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_attributes":
		if len(x.OriginalAttributes) == 0 {
			return protoreflect.ValueOfList(&_EventHandleQueuedMsg_6_list{})
		}
		listValue := &_EventHandleQueuedMsg_6_list{list: &x.OriginalAttributes}
		return protoreflect.ValueOfList(listValue)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.error":
		value := x.Error
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventHandleQueuedMsg"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventHandleQueuedMsg does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventHandleQueuedMsg) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_event_type":
		x.OriginalEventType = value.Interface().(string)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.epoch_number":
		x.EpochNumber = value.Uint()
	case "cosmos.epoching.v1.EventHandleQueuedMsg.height":
		x.Height = value.Uint()
	case "cosmos.epoching.v1.EventHandleQueuedMsg.tx_id":
		x.TxId = value.Bytes()
	case "cosmos.epoching.v1.EventHandleQueuedMsg.msg_id":
		x.MsgId = value.Bytes()
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_attributes":
		lv := value.List()
		clv := lv.(*_EventHandleQueuedMsg_6_list)
		x.OriginalAttributes = *clv.list
	case "cosmos.epoching.v1.EventHandleQueuedMsg.error":
		x.Error = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventHandleQueuedMsg"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventHandleQueuedMsg does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventHandleQueuedMsg) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_attributes":
		if x.OriginalAttributes == nil {
			x.OriginalAttributes = [][]byte{}
		}
		value := &_EventHandleQueuedMsg_6_list{list: &x.OriginalAttributes}
		return protoreflect.ValueOfList(value)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_event_type":
		panic(fmt.Errorf("field original_event_type of message cosmos.epoching.v1.EventHandleQueuedMsg is not mutable"))
	case "cosmos.epoching.v1.EventHandleQueuedMsg.epoch_number":
		panic(fmt.Errorf("field epoch_number of message cosmos.epoching.v1.EventHandleQueuedMsg is not mutable"))
	case "cosmos.epoching.v1.EventHandleQueuedMsg.height":
		panic(fmt.Errorf("field height of message cosmos.epoching.v1.EventHandleQueuedMsg is not mutable"))
	case "cosmos.epoching.v1.EventHandleQueuedMsg.tx_id":
		panic(fmt.Errorf("field tx_id of message cosmos.epoching.v1.EventHandleQueuedMsg is not mutable"))
	case "cosmos.epoching.v1.EventHandleQueuedMsg.msg_id":
		panic(fmt.Errorf("field msg_id of message cosmos.epoching.v1.EventHandleQueuedMsg is not mutable"))
	case "cosmos.epoching.v1.EventHandleQueuedMsg.error":
		panic(fmt.Errorf("field error of message cosmos.epoching.v1.EventHandleQueuedMsg is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventHandleQueuedMsg"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventHandleQueuedMsg does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventHandleQueuedMsg) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_event_type":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventHandleQueuedMsg.epoch_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.EventHandleQueuedMsg.height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.EventHandleQueuedMsg.tx_id":
		return protoreflect.ValueOfBytes(nil)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.msg_id":
		return protoreflect.ValueOfBytes(nil)
	case "cosmos.epoching.v1.EventHandleQueuedMsg.original_attributes":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_EventHandleQueuedMsg_6_list{list: &list})
	case "cosmos.epoching.v1.EventHandleQueuedMsg.error":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventHandleQueuedMsg"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventHandleQueuedMsg does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventHandleQueuedMsg) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.EventHandleQueuedMsg", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventHandleQueuedMsg) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventHandleQueuedMsg) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventHandleQueuedMsg) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventHandleQueuedMsg) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventHandleQueuedMsg)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.OriginalEventType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EpochNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochNumber))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		l = len(x.TxId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MsgId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.OriginalAttributes) > 0 {
			for _, b := range x.OriginalAttributes {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Error)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventHandleQueuedMsg)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Error) > 0 {
			i -= len(x.Error)
			copy(dAtA[i:], x.Error)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Error)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.OriginalAttributes) > 0 {
			for iNdEx := len(x.OriginalAttributes) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.OriginalAttributes[iNdEx])
				copy(dAtA[i:], x.OriginalAttributes[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OriginalAttributes[iNdEx])))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.MsgId) > 0 {
			i -= len(x.MsgId)
			copy(dAtA[i:], x.MsgId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MsgId)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.TxId) > 0 {
			i -= len(x.TxId)
			copy(dAtA[i:], x.TxId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TxId)))
			i--
			dAtA[i] = 0x22
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x18
		}
		if x.EpochNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochNumber))
			i--
			dAtA[i] = 0x10
		}
		if len(x.OriginalEventType) > 0 {
			i -= len(x.OriginalEventType)
			copy(dAtA[i:], x.OriginalEventType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OriginalEventType)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventHandleQueuedMsg)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventHandleQueuedMsg: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventHandleQueuedMsg: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OriginalEventType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OriginalEventType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochNumber", wireType)
				}
				x.EpochNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TxId = append(x.TxId[:0], dAtA[iNdEx:postIndex]...)
				if x.TxId == nil {
					x.TxId = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MsgId = append(x.MsgId[:0], dAtA[iNdEx:postIndex]...)
				if x.MsgId == nil {
					x.MsgId = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OriginalAttributes", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OriginalAttributes = append(x.OriginalAttributes, make([]byte, postIndex-iNdEx))
				copy(x.OriginalAttributes[len(x.OriginalAttributes)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Error = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventSlashThreshold_3_list)(nil)

type _EventSlashThreshold_3_list struct {
	list *[][]byte
}

func (x *_EventSlashThreshold_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventSlashThreshold_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_EventSlashThreshold_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EventSlashThreshold_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventSlashThreshold_3_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EventSlashThreshold at list field SlashedValidators as it is not of Message kind"))
}

func (x *_EventSlashThreshold_3_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EventSlashThreshold_3_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_EventSlashThreshold_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventSlashThreshold                      protoreflect.MessageDescriptor
	fd_EventSlashThreshold_slashed_voting_power protoreflect.FieldDescriptor
	fd_EventSlashThreshold_total_voting_power   protoreflect.FieldDescriptor
	fd_EventSlashThreshold_slashed_validators   protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_events_proto_init()
	md_EventSlashThreshold = File_cosmos_epoching_v1_events_proto.Messages().ByName("EventSlashThreshold")
	fd_EventSlashThreshold_slashed_voting_power = md_EventSlashThreshold.Fields().ByName("slashed_voting_power")
	fd_EventSlashThreshold_total_voting_power = md_EventSlashThreshold.Fields().ByName("total_voting_power")
	fd_EventSlashThreshold_slashed_validators = md_EventSlashThreshold.Fields().ByName("slashed_validators")
}

var _ protoreflect.Message = (*fastReflection_EventSlashThreshold)(nil)

type fastReflection_EventSlashThreshold EventSlashThreshold

func (x *EventSlashThreshold) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventSlashThreshold)(x)
}

func (x *EventSlashThreshold) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventSlashThreshold_messageType fastReflection_EventSlashThreshold_messageType
var _ protoreflect.MessageType = fastReflection_EventSlashThreshold_messageType{}

type fastReflection_EventSlashThreshold_messageType struct{}

func (x fastReflection_EventSlashThreshold_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventSlashThreshold)(nil)
}
func (x fastReflection_EventSlashThreshold_messageType) New() protoreflect.Message {
	return new(fastReflection_EventSlashThreshold)
}
func (x fastReflection_EventSlashThreshold_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventSlashThreshold
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventSlashThreshold) Descriptor() protoreflect.MessageDescriptor {
	return md_EventSlashThreshold
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventSlashThreshold) Type() protoreflect.MessageType {
	return _fastReflection_EventSlashThreshold_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventSlashThreshold) New() protoreflect.Message {
	return new(fastReflection_EventSlashThreshold)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventSlashThreshold) Interface() protoreflect.ProtoMessage {
	return (*EventSlashThreshold)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventSlashThreshold) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SlashedVotingPower != int64(0) {
		value := protoreflect.ValueOfInt64(x.SlashedVotingPower)
		if !f(fd_EventSlashThreshold_slashed_voting_power, value) {
			return
		}
	}
	if x.TotalVotingPower != int64(0) {
		value := protoreflect.ValueOfInt64(x.TotalVotingPower)
		if !f(fd_EventSlashThreshold_total_voting_power, value) {
			return
		}
	}
	if len(x.SlashedValidators) != 0 {
		value := protoreflect.ValueOfList(&_EventSlashThreshold_3_list{list: &x.SlashedValidators})
		if !f(fd_EventSlashThreshold_slashed_validators, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventSlashThreshold) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_voting_power":
		return x.SlashedVotingPower != int64(0)
	case "cosmos.epoching.v1.EventSlashThreshold.total_voting_power":
		return x.TotalVotingPower != int64(0)
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_validators":
		return len(x.SlashedValidators) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventSlashThreshold"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventSlashThreshold does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventSlashThreshold) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_voting_power":
		x.SlashedVotingPower = int64(0)
	case "cosmos.epoching.v1.EventSlashThreshold.total_voting_power":
		x.TotalVotingPower = int64(0)
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_validators":
		x.SlashedValidators = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventSlashThreshold"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventSlashThreshold does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventSlashThreshold) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_voting_power":
		value := x.SlashedVotingPower
		return protoreflect.ValueOfInt64(value)
	case "cosmos.epoching.v1.EventSlashThreshold.total_voting_power":
		value := x.TotalVotingPower
		return protoreflect.ValueOfInt64(value)
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_validators":
		if len(x.SlashedValidators) == 0 {
			return protoreflect.ValueOfList(&_EventSlashThreshold_3_list{})
		}
		listValue := &_EventSlashThreshold_3_list{list: &x.SlashedValidators}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventSlashThreshold"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventSlashThreshold does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventSlashThreshold) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_voting_power":
		x.SlashedVotingPower = value.Int()
	case "cosmos.epoching.v1.EventSlashThreshold.total_voting_power":
		x.TotalVotingPower = value.Int()
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_validators":
		lv := value.List()
		clv := lv.(*_EventSlashThreshold_3_list)
		x.SlashedValidators = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventSlashThreshold"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventSlashThreshold does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventSlashThreshold) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_validators":
		if x.SlashedValidators == nil {
			x.SlashedValidators = [][]byte{}
		}
		value := &_EventSlashThreshold_3_list{list: &x.SlashedValidators}
		return protoreflect.ValueOfList(value)
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_voting_power":
		panic(fmt.Errorf("field slashed_voting_power of message cosmos.epoching.v1.EventSlashThreshold is not mutable"))
	case "cosmos.epoching.v1.EventSlashThreshold.total_voting_power":
		panic(fmt.Errorf("field total_voting_power of message cosmos.epoching.v1.EventSlashThreshold is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventSlashThreshold"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventSlashThreshold does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventSlashThreshold) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_voting_power":
		return protoreflect.ValueOfInt64(int64(0))
	case "cosmos.epoching.v1.EventSlashThreshold.total_voting_power":
		return protoreflect.ValueOfInt64(int64(0))
	case "cosmos.epoching.v1.EventSlashThreshold.slashed_validators":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_EventSlashThreshold_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventSlashThreshold"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventSlashThreshold does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventSlashThreshold) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.EventSlashThreshold", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventSlashThreshold) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventSlashThreshold) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventSlashThreshold) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventSlashThreshold) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventSlashThreshold)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.SlashedVotingPower != 0 {
			n += 1 + runtime.Sov(uint64(x.SlashedVotingPower))
		}
		if x.TotalVotingPower != 0 {
			n += 1 + runtime.Sov(uint64(x.TotalVotingPower))
		}
		if len(x.SlashedValidators) > 0 {
			for _, b := range x.SlashedValidators {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventSlashThreshold)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SlashedValidators) > 0 {
			for iNdEx := len(x.SlashedValidators) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.SlashedValidators[iNdEx])
				copy(dAtA[i:], x.SlashedValidators[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SlashedValidators[iNdEx])))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.TotalVotingPower != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TotalVotingPower))
			i--
			dAtA[i] = 0x10
		}
		if x.SlashedVotingPower != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SlashedVotingPower))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventSlashThreshold)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventSlashThreshold: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventSlashThreshold: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SlashedVotingPower", wireType)
				}
				x.SlashedVotingPower = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SlashedVotingPower |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalVotingPower", wireType)
				}
				x.TotalVotingPower = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TotalVotingPower |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SlashedValidators", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SlashedValidators = append(x.SlashedValidators, make([]byte, postIndex-iNdEx))
				copy(x.SlashedValidators[len(x.SlashedValidators)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventWrappedDelegate                   protoreflect.MessageDescriptor
	fd_EventWrappedDelegate_delegator_address protoreflect.FieldDescriptor
	fd_EventWrappedDelegate_validator_address protoreflect.FieldDescriptor
	fd_EventWrappedDelegate_amount            protoreflect.FieldDescriptor
	fd_EventWrappedDelegate_denom             protoreflect.FieldDescriptor
	fd_EventWrappedDelegate_epoch_boundary    protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_events_proto_init()
	md_EventWrappedDelegate = File_cosmos_epoching_v1_events_proto.Messages().ByName("EventWrappedDelegate")
	fd_EventWrappedDelegate_delegator_address = md_EventWrappedDelegate.Fields().ByName("delegator_address")
	fd_EventWrappedDelegate_validator_address = md_EventWrappedDelegate.Fields().ByName("validator_address")
	fd_EventWrappedDelegate_amount = md_EventWrappedDelegate.Fields().ByName("amount")
	fd_EventWrappedDelegate_denom = md_EventWrappedDelegate.Fields().ByName("denom")
	fd_EventWrappedDelegate_epoch_boundary = md_EventWrappedDelegate.Fields().ByName("epoch_boundary")
}

var _ protoreflect.Message = (*fastReflection_EventWrappedDelegate)(nil)

type fastReflection_EventWrappedDelegate EventWrappedDelegate

func (x *EventWrappedDelegate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventWrappedDelegate)(x)
}

func (x *EventWrappedDelegate) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventWrappedDelegate_messageType fastReflection_EventWrappedDelegate_messageType
var _ protoreflect.MessageType = fastReflection_EventWrappedDelegate_messageType{}

type fastReflection_EventWrappedDelegate_messageType struct{}

func (x fastReflection_EventWrappedDelegate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventWrappedDelegate)(nil)
}
func (x fastReflection_EventWrappedDelegate_messageType) New() protoreflect.Message {
	return new(fastReflection_EventWrappedDelegate)
}
func (x fastReflection_EventWrappedDelegate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventWrappedDelegate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventWrappedDelegate) Descriptor() protoreflect.MessageDescriptor {
	return md_EventWrappedDelegate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventWrappedDelegate) Type() protoreflect.MessageType {
	return _fastReflection_EventWrappedDelegate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventWrappedDelegate) New() protoreflect.Message {
	return new(fastReflection_EventWrappedDelegate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventWrappedDelegate) Interface() protoreflect.ProtoMessage {
	return (*EventWrappedDelegate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventWrappedDelegate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegatorAddress != "" {
		value := protoreflect.ValueOfString(x.DelegatorAddress)
		if !f(fd_EventWrappedDelegate_delegator_address, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_EventWrappedDelegate_validator_address, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_EventWrappedDelegate_amount, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_EventWrappedDelegate_denom, value) {
			return
		}
	}
	if x.EpochBoundary != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochBoundary)
		if !f(fd_EventWrappedDelegate_epoch_boundary, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventWrappedDelegate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedDelegate.delegator_address":
		return x.DelegatorAddress != ""
	case "cosmos.epoching.v1.EventWrappedDelegate.validator_address":
		return x.ValidatorAddress != ""
	case "cosmos.epoching.v1.EventWrappedDelegate.amount":
		return x.Amount != uint64(0)
	case "cosmos.epoching.v1.EventWrappedDelegate.denom":
		return x.Denom != ""
	case "cosmos.epoching.v1.EventWrappedDelegate.epoch_boundary":
		return x.EpochBoundary != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedDelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedDelegate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedDelegate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedDelegate.delegator_address":
		x.DelegatorAddress = ""
	case "cosmos.epoching.v1.EventWrappedDelegate.validator_address":
		x.ValidatorAddress = ""
	case "cosmos.epoching.v1.EventWrappedDelegate.amount":
		x.Amount = uint64(0)
	case "cosmos.epoching.v1.EventWrappedDelegate.denom":
		x.Denom = ""
	case "cosmos.epoching.v1.EventWrappedDelegate.epoch_boundary":
		x.EpochBoundary = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedDelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedDelegate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventWrappedDelegate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.EventWrappedDelegate.delegator_address":
		value := x.DelegatorAddress
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedDelegate.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedDelegate.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.EventWrappedDelegate.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedDelegate.epoch_boundary":
		value := x.EpochBoundary
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedDelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedDelegate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedDelegate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedDelegate.delegator_address":
		x.DelegatorAddress = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedDelegate.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedDelegate.amount":
		x.Amount = value.Uint()
	case "cosmos.epoching.v1.EventWrappedDelegate.denom":
		x.Denom = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedDelegate.epoch_boundary":
		x.EpochBoundary = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedDelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedDelegate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedDelegate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedDelegate.delegator_address":
		panic(fmt.Errorf("field delegator_address of message cosmos.epoching.v1.EventWrappedDelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedDelegate.validator_address":
		panic(fmt.Errorf("field validator_address of message cosmos.epoching.v1.EventWrappedDelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedDelegate.amount":
		panic(fmt.Errorf("field amount of message cosmos.epoching.v1.EventWrappedDelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedDelegate.denom":
		panic(fmt.Errorf("field denom of message cosmos.epoching.v1.EventWrappedDelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedDelegate.epoch_boundary":
		panic(fmt.Errorf("field epoch_boundary of message cosmos.epoching.v1.EventWrappedDelegate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedDelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedDelegate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventWrappedDelegate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedDelegate.delegator_address":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedDelegate.validator_address":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedDelegate.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.EventWrappedDelegate.denom":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedDelegate.epoch_boundary":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedDelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedDelegate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventWrappedDelegate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.EventWrappedDelegate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventWrappedDelegate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedDelegate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventWrappedDelegate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventWrappedDelegate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventWrappedDelegate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DelegatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EpochBoundary != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochBoundary))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventWrappedDelegate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EpochBoundary != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochBoundary))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x22
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.DelegatorAddress) > 0 {
			i -= len(x.DelegatorAddress)
			copy(dAtA[i:], x.DelegatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DelegatorAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventWrappedDelegate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventWrappedDelegate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventWrappedDelegate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochBoundary", wireType)
				}
				x.EpochBoundary = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochBoundary |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventWrappedUndelegate                   protoreflect.MessageDescriptor
	fd_EventWrappedUndelegate_delegator_address protoreflect.FieldDescriptor
	fd_EventWrappedUndelegate_validator_address protoreflect.FieldDescriptor
	fd_EventWrappedUndelegate_amount            protoreflect.FieldDescriptor
	fd_EventWrappedUndelegate_denom             protoreflect.FieldDescriptor
	fd_EventWrappedUndelegate_epoch_boundary    protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_events_proto_init()
	md_EventWrappedUndelegate = File_cosmos_epoching_v1_events_proto.Messages().ByName("EventWrappedUndelegate")
	fd_EventWrappedUndelegate_delegator_address = md_EventWrappedUndelegate.Fields().ByName("delegator_address")
	fd_EventWrappedUndelegate_validator_address = md_EventWrappedUndelegate.Fields().ByName("validator_address")
	fd_EventWrappedUndelegate_amount = md_EventWrappedUndelegate.Fields().ByName("amount")
	fd_EventWrappedUndelegate_denom = md_EventWrappedUndelegate.Fields().ByName("denom")
	fd_EventWrappedUndelegate_epoch_boundary = md_EventWrappedUndelegate.Fields().ByName("epoch_boundary")
}

var _ protoreflect.Message = (*fastReflection_EventWrappedUndelegate)(nil)

type fastReflection_EventWrappedUndelegate EventWrappedUndelegate

func (x *EventWrappedUndelegate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventWrappedUndelegate)(x)
}

func (x *EventWrappedUndelegate) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventWrappedUndelegate_messageType fastReflection_EventWrappedUndelegate_messageType
var _ protoreflect.MessageType = fastReflection_EventWrappedUndelegate_messageType{}

type fastReflection_EventWrappedUndelegate_messageType struct{}

func (x fastReflection_EventWrappedUndelegate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventWrappedUndelegate)(nil)
}
func (x fastReflection_EventWrappedUndelegate_messageType) New() protoreflect.Message {
	return new(fastReflection_EventWrappedUndelegate)
}
func (x fastReflection_EventWrappedUndelegate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventWrappedUndelegate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventWrappedUndelegate) Descriptor() protoreflect.MessageDescriptor {
	return md_EventWrappedUndelegate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventWrappedUndelegate) Type() protoreflect.MessageType {
	return _fastReflection_EventWrappedUndelegate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventWrappedUndelegate) New() protoreflect.Message {
	return new(fastReflection_EventWrappedUndelegate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventWrappedUndelegate) Interface() protoreflect.ProtoMessage {
	return (*EventWrappedUndelegate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventWrappedUndelegate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegatorAddress != "" {
		value := protoreflect.ValueOfString(x.DelegatorAddress)
		if !f(fd_EventWrappedUndelegate_delegator_address, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_EventWrappedUndelegate_validator_address, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_EventWrappedUndelegate_amount, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_EventWrappedUndelegate_denom, value) {
			return
		}
	}
	if x.EpochBoundary != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochBoundary)
		if !f(fd_EventWrappedUndelegate_epoch_boundary, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventWrappedUndelegate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedUndelegate.delegator_address":
		return x.DelegatorAddress != ""
	case "cosmos.epoching.v1.EventWrappedUndelegate.validator_address":
		return x.ValidatorAddress != ""
	case "cosmos.epoching.v1.EventWrappedUndelegate.amount":
		return x.Amount != uint64(0)
	case "cosmos.epoching.v1.EventWrappedUndelegate.denom":
		return x.Denom != ""
	case "cosmos.epoching.v1.EventWrappedUndelegate.epoch_boundary":
		return x.EpochBoundary != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedUndelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedUndelegate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedUndelegate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedUndelegate.delegator_address":
		x.DelegatorAddress = ""
	case "cosmos.epoching.v1.EventWrappedUndelegate.validator_address":
		x.ValidatorAddress = ""
	case "cosmos.epoching.v1.EventWrappedUndelegate.amount":
		x.Amount = uint64(0)
	case "cosmos.epoching.v1.EventWrappedUndelegate.denom":
		x.Denom = ""
	case "cosmos.epoching.v1.EventWrappedUndelegate.epoch_boundary":
		x.EpochBoundary = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedUndelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedUndelegate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventWrappedUndelegate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.EventWrappedUndelegate.delegator_address":
		value := x.DelegatorAddress
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedUndelegate.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedUndelegate.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.EventWrappedUndelegate.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedUndelegate.epoch_boundary":
		value := x.EpochBoundary
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedUndelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedUndelegate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedUndelegate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedUndelegate.delegator_address":
		x.DelegatorAddress = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedUndelegate.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedUndelegate.amount":
		x.Amount = value.Uint()
	case "cosmos.epoching.v1.EventWrappedUndelegate.denom":
		x.Denom = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedUndelegate.epoch_boundary":
		x.EpochBoundary = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedUndelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedUndelegate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedUndelegate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedUndelegate.delegator_address":
		panic(fmt.Errorf("field delegator_address of message cosmos.epoching.v1.EventWrappedUndelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedUndelegate.validator_address":
		panic(fmt.Errorf("field validator_address of message cosmos.epoching.v1.EventWrappedUndelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedUndelegate.amount":
		panic(fmt.Errorf("field amount of message cosmos.epoching.v1.EventWrappedUndelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedUndelegate.denom":
		panic(fmt.Errorf("field denom of message cosmos.epoching.v1.EventWrappedUndelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedUndelegate.epoch_boundary":
		panic(fmt.Errorf("field epoch_boundary of message cosmos.epoching.v1.EventWrappedUndelegate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedUndelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedUndelegate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventWrappedUndelegate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedUndelegate.delegator_address":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedUndelegate.validator_address":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedUndelegate.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.EventWrappedUndelegate.denom":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedUndelegate.epoch_boundary":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedUndelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedUndelegate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventWrappedUndelegate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.EventWrappedUndelegate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventWrappedUndelegate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedUndelegate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventWrappedUndelegate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventWrappedUndelegate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventWrappedUndelegate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DelegatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EpochBoundary != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochBoundary))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventWrappedUndelegate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EpochBoundary != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochBoundary))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x22
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.DelegatorAddress) > 0 {
			i -= len(x.DelegatorAddress)
			copy(dAtA[i:], x.DelegatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DelegatorAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventWrappedUndelegate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventWrappedUndelegate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventWrappedUndelegate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochBoundary", wireType)
				}
				x.EpochBoundary = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochBoundary |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventWrappedBeginRedelegate                               protoreflect.MessageDescriptor
	fd_EventWrappedBeginRedelegate_delegator_address             protoreflect.FieldDescriptor
	fd_EventWrappedBeginRedelegate_source_validator_address      protoreflect.FieldDescriptor
	fd_EventWrappedBeginRedelegate_destination_validator_address protoreflect.FieldDescriptor
	fd_EventWrappedBeginRedelegate_amount                        protoreflect.FieldDescriptor
	fd_EventWrappedBeginRedelegate_denom                         protoreflect.FieldDescriptor
	fd_EventWrappedBeginRedelegate_epoch_boundary                protoreflect.FieldDescriptor
)

func init() {
	file_cosmos_epoching_v1_events_proto_init()
	md_EventWrappedBeginRedelegate = File_cosmos_epoching_v1_events_proto.Messages().ByName("EventWrappedBeginRedelegate")
	fd_EventWrappedBeginRedelegate_delegator_address = md_EventWrappedBeginRedelegate.Fields().ByName("delegator_address")
	fd_EventWrappedBeginRedelegate_source_validator_address = md_EventWrappedBeginRedelegate.Fields().ByName("source_validator_address")
	fd_EventWrappedBeginRedelegate_destination_validator_address = md_EventWrappedBeginRedelegate.Fields().ByName("destination_validator_address")
	fd_EventWrappedBeginRedelegate_amount = md_EventWrappedBeginRedelegate.Fields().ByName("amount")
	fd_EventWrappedBeginRedelegate_denom = md_EventWrappedBeginRedelegate.Fields().ByName("denom")
	fd_EventWrappedBeginRedelegate_epoch_boundary = md_EventWrappedBeginRedelegate.Fields().ByName("epoch_boundary")
}

var _ protoreflect.Message = (*fastReflection_EventWrappedBeginRedelegate)(nil)

type fastReflection_EventWrappedBeginRedelegate EventWrappedBeginRedelegate

func (x *EventWrappedBeginRedelegate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventWrappedBeginRedelegate)(x)
}

func (x *EventWrappedBeginRedelegate) slowProtoReflect() protoreflect.Message {
	mi := &file_cosmos_epoching_v1_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventWrappedBeginRedelegate_messageType fastReflection_EventWrappedBeginRedelegate_messageType
var _ protoreflect.MessageType = fastReflection_EventWrappedBeginRedelegate_messageType{}

type fastReflection_EventWrappedBeginRedelegate_messageType struct{}

func (x fastReflection_EventWrappedBeginRedelegate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventWrappedBeginRedelegate)(nil)
}
func (x fastReflection_EventWrappedBeginRedelegate_messageType) New() protoreflect.Message {
	return new(fastReflection_EventWrappedBeginRedelegate)
}
func (x fastReflection_EventWrappedBeginRedelegate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventWrappedBeginRedelegate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventWrappedBeginRedelegate) Descriptor() protoreflect.MessageDescriptor {
	return md_EventWrappedBeginRedelegate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventWrappedBeginRedelegate) Type() protoreflect.MessageType {
	return _fastReflection_EventWrappedBeginRedelegate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventWrappedBeginRedelegate) New() protoreflect.Message {
	return new(fastReflection_EventWrappedBeginRedelegate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventWrappedBeginRedelegate) Interface() protoreflect.ProtoMessage {
	return (*EventWrappedBeginRedelegate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventWrappedBeginRedelegate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.DelegatorAddress != "" {
		value := protoreflect.ValueOfString(x.DelegatorAddress)
		if !f(fd_EventWrappedBeginRedelegate_delegator_address, value) {
			return
		}
	}
	if x.SourceValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.SourceValidatorAddress)
		if !f(fd_EventWrappedBeginRedelegate_source_validator_address, value) {
			return
		}
	}
	if x.DestinationValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.DestinationValidatorAddress)
		if !f(fd_EventWrappedBeginRedelegate_destination_validator_address, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_EventWrappedBeginRedelegate_amount, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_EventWrappedBeginRedelegate_denom, value) {
			return
		}
	}
	if x.EpochBoundary != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EpochBoundary)
		if !f(fd_EventWrappedBeginRedelegate_epoch_boundary, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventWrappedBeginRedelegate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.delegator_address":
		return x.DelegatorAddress != ""
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.source_validator_address":
		return x.SourceValidatorAddress != ""
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.destination_validator_address":
		return x.DestinationValidatorAddress != ""
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.amount":
		return x.Amount != uint64(0)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.denom":
		return x.Denom != ""
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.epoch_boundary":
		return x.EpochBoundary != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedBeginRedelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedBeginRedelegate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedBeginRedelegate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.delegator_address":
		x.DelegatorAddress = ""
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.source_validator_address":
		x.SourceValidatorAddress = ""
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.destination_validator_address":
		x.DestinationValidatorAddress = ""
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.amount":
		x.Amount = uint64(0)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.denom":
		x.Denom = ""
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.epoch_boundary":
		x.EpochBoundary = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedBeginRedelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedBeginRedelegate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventWrappedBeginRedelegate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.delegator_address":
		value := x.DelegatorAddress
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.source_validator_address":
		value := x.SourceValidatorAddress
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.destination_validator_address":
		value := x.DestinationValidatorAddress
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.epoch_boundary":
		value := x.EpochBoundary
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedBeginRedelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedBeginRedelegate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedBeginRedelegate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.delegator_address":
		x.DelegatorAddress = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.source_validator_address":
		x.SourceValidatorAddress = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.destination_validator_address":
		x.DestinationValidatorAddress = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.amount":
		x.Amount = value.Uint()
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.denom":
		x.Denom = value.Interface().(string)
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.epoch_boundary":
		x.EpochBoundary = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedBeginRedelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedBeginRedelegate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedBeginRedelegate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.delegator_address":
		panic(fmt.Errorf("field delegator_address of message cosmos.epoching.v1.EventWrappedBeginRedelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.source_validator_address":
		panic(fmt.Errorf("field source_validator_address of message cosmos.epoching.v1.EventWrappedBeginRedelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.destination_validator_address":
		panic(fmt.Errorf("field destination_validator_address of message cosmos.epoching.v1.EventWrappedBeginRedelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.amount":
		panic(fmt.Errorf("field amount of message cosmos.epoching.v1.EventWrappedBeginRedelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.denom":
		panic(fmt.Errorf("field denom of message cosmos.epoching.v1.EventWrappedBeginRedelegate is not mutable"))
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.epoch_boundary":
		panic(fmt.Errorf("field epoch_boundary of message cosmos.epoching.v1.EventWrappedBeginRedelegate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedBeginRedelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedBeginRedelegate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventWrappedBeginRedelegate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.delegator_address":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.source_validator_address":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.destination_validator_address":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.denom":
		return protoreflect.ValueOfString("")
	case "cosmos.epoching.v1.EventWrappedBeginRedelegate.epoch_boundary":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cosmos.epoching.v1.EventWrappedBeginRedelegate"))
		}
		panic(fmt.Errorf("message cosmos.epoching.v1.EventWrappedBeginRedelegate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventWrappedBeginRedelegate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cosmos.epoching.v1.EventWrappedBeginRedelegate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventWrappedBeginRedelegate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventWrappedBeginRedelegate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventWrappedBeginRedelegate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventWrappedBeginRedelegate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventWrappedBeginRedelegate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.DelegatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SourceValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DestinationValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EpochBoundary != 0 {
			n += 1 + runtime.Sov(uint64(x.EpochBoundary))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventWrappedBeginRedelegate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EpochBoundary != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EpochBoundary))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x20
		}
		if len(x.DestinationValidatorAddress) > 0 {
			i -= len(x.DestinationValidatorAddress)
			copy(dAtA[i:], x.DestinationValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DestinationValidatorAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.SourceValidatorAddress) > 0 {
			i -= len(x.SourceValidatorAddress)
			copy(dAtA[i:], x.SourceValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SourceValidatorAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.DelegatorAddress) > 0 {
			i -= len(x.DelegatorAddress)
			copy(dAtA[i:], x.DelegatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DelegatorAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventWrappedBeginRedelegate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventWrappedBeginRedelegate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventWrappedBeginRedelegate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DelegatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SourceValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SourceValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DestinationValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DestinationValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EpochBoundary", wireType)
				}
				x.EpochBoundary = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EpochBoundary |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cosmos/epoching/v1/events.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventBeginEpoch is the event emitted when an epoch has started
type EventBeginEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber uint64 `protobuf:"varint,1,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
}

func (x *EventBeginEpoch) Reset() {
	*x = EventBeginEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBeginEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBeginEpoch) ProtoMessage() {}

// Deprecated: Use EventBeginEpoch.ProtoReflect.Descriptor instead.
func (*EventBeginEpoch) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventBeginEpoch) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

// EventEndEpoch is the event emitted when an epoch has ended
type EventEndEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpochNumber uint64 `protobuf:"varint,1,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
}

func (x *EventEndEpoch) Reset() {
	*x = EventEndEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventEndEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEndEpoch) ProtoMessage() {}

// Deprecated: Use EventEndEpoch.ProtoReflect.Descriptor instead.
func (*EventEndEpoch) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventEndEpoch) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

// EventHandleQueuedMsg is the event emitted when a queued message has been
// handled
type EventHandleQueuedMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalEventType  string   `protobuf:"bytes,1,opt,name=original_event_type,json=originalEventType,proto3" json:"original_event_type,omitempty"`
	EpochNumber        uint64   `protobuf:"varint,2,opt,name=epoch_number,json=epochNumber,proto3" json:"epoch_number,omitempty"`
	Height             uint64   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	TxId               []byte   `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	MsgId              []byte   `protobuf:"bytes,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	OriginalAttributes [][]byte `protobuf:"bytes,6,rep,name=original_attributes,json=originalAttributes,proto3" json:"original_attributes,omitempty"`
	Error              string   `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EventHandleQueuedMsg) Reset() {
	*x = EventHandleQueuedMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventHandleQueuedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventHandleQueuedMsg) ProtoMessage() {}

// Deprecated: Use EventHandleQueuedMsg.ProtoReflect.Descriptor instead.
func (*EventHandleQueuedMsg) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventHandleQueuedMsg) GetOriginalEventType() string {
	if x != nil {
		return x.OriginalEventType
	}
	return ""
}

func (x *EventHandleQueuedMsg) GetEpochNumber() uint64 {
	if x != nil {
		return x.EpochNumber
	}
	return 0
}

func (x *EventHandleQueuedMsg) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EventHandleQueuedMsg) GetTxId() []byte {
	if x != nil {
		return x.TxId
	}
	return nil
}

func (x *EventHandleQueuedMsg) GetMsgId() []byte {
	if x != nil {
		return x.MsgId
	}
	return nil
}

func (x *EventHandleQueuedMsg) GetOriginalAttributes() [][]byte {
	if x != nil {
		return x.OriginalAttributes
	}
	return nil
}

func (x *EventHandleQueuedMsg) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// EventSlashThreshold is the event emitted when a set of validators have been
// slashed
type EventSlashThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlashedVotingPower int64    `protobuf:"varint,1,opt,name=slashed_voting_power,json=slashedVotingPower,proto3" json:"slashed_voting_power,omitempty"`
	TotalVotingPower   int64    `protobuf:"varint,2,opt,name=total_voting_power,json=totalVotingPower,proto3" json:"total_voting_power,omitempty"`
	SlashedValidators  [][]byte `protobuf:"bytes,3,rep,name=slashed_validators,json=slashedValidators,proto3" json:"slashed_validators,omitempty"`
}

func (x *EventSlashThreshold) Reset() {
	*x = EventSlashThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSlashThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSlashThreshold) ProtoMessage() {}

// Deprecated: Use EventSlashThreshold.ProtoReflect.Descriptor instead.
func (*EventSlashThreshold) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventSlashThreshold) GetSlashedVotingPower() int64 {
	if x != nil {
		return x.SlashedVotingPower
	}
	return 0
}

func (x *EventSlashThreshold) GetTotalVotingPower() int64 {
	if x != nil {
		return x.TotalVotingPower
	}
	return 0
}

func (x *EventSlashThreshold) GetSlashedValidators() [][]byte {
	if x != nil {
		return x.SlashedValidators
	}
	return nil
}

// EventWrappedDelegate is the event emitted when a MsgWrappedDelegate has been
// queued
type EventWrappedDelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ValidatorAddress string `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Amount           uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom            string `protobuf:"bytes,4,opt,name=denom,proto3" json:"denom,omitempty"`
	EpochBoundary    uint64 `protobuf:"varint,5,opt,name=epoch_boundary,json=epochBoundary,proto3" json:"epoch_boundary,omitempty"`
}

func (x *EventWrappedDelegate) Reset() {
	*x = EventWrappedDelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventWrappedDelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWrappedDelegate) ProtoMessage() {}

// Deprecated: Use EventWrappedDelegate.ProtoReflect.Descriptor instead.
func (*EventWrappedDelegate) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventWrappedDelegate) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *EventWrappedDelegate) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *EventWrappedDelegate) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EventWrappedDelegate) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *EventWrappedDelegate) GetEpochBoundary() uint64 {
	if x != nil {
		return x.EpochBoundary
	}
	return 0
}

// EventWrappedUndelegate is the event emitted when a MsgWrappedUndelegate has
// been queued
type EventWrappedUndelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	ValidatorAddress string `protobuf:"bytes,2,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	Amount           uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom            string `protobuf:"bytes,4,opt,name=denom,proto3" json:"denom,omitempty"`
	EpochBoundary    uint64 `protobuf:"varint,5,opt,name=epoch_boundary,json=epochBoundary,proto3" json:"epoch_boundary,omitempty"`
}

func (x *EventWrappedUndelegate) Reset() {
	*x = EventWrappedUndelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventWrappedUndelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWrappedUndelegate) ProtoMessage() {}

// Deprecated: Use EventWrappedUndelegate.ProtoReflect.Descriptor instead.
func (*EventWrappedUndelegate) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventWrappedUndelegate) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *EventWrappedUndelegate) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *EventWrappedUndelegate) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EventWrappedUndelegate) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *EventWrappedUndelegate) GetEpochBoundary() uint64 {
	if x != nil {
		return x.EpochBoundary
	}
	return 0
}

// EventWrappedBeginRedelegate is the event emitted when a
// MsgWrappedBeginRedelegate has been queued
type EventWrappedBeginRedelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelegatorAddress            string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	SourceValidatorAddress      string `protobuf:"bytes,2,opt,name=source_validator_address,json=sourceValidatorAddress,proto3" json:"source_validator_address,omitempty"`
	DestinationValidatorAddress string `protobuf:"bytes,3,opt,name=destination_validator_address,json=destinationValidatorAddress,proto3" json:"destination_validator_address,omitempty"`
	Amount                      uint64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Denom                       string `protobuf:"bytes,5,opt,name=denom,proto3" json:"denom,omitempty"`
	EpochBoundary               uint64 `protobuf:"varint,6,opt,name=epoch_boundary,json=epochBoundary,proto3" json:"epoch_boundary,omitempty"`
}

func (x *EventWrappedBeginRedelegate) Reset() {
	*x = EventWrappedBeginRedelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cosmos_epoching_v1_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventWrappedBeginRedelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWrappedBeginRedelegate) ProtoMessage() {}

// Deprecated: Use EventWrappedBeginRedelegate.ProtoReflect.Descriptor instead.
func (*EventWrappedBeginRedelegate) Descriptor() ([]byte, []int) {
	return file_cosmos_epoching_v1_events_proto_rawDescGZIP(), []int{6}
}

func (x *EventWrappedBeginRedelegate) GetDelegatorAddress() string {
	if x != nil {
		return x.DelegatorAddress
	}
	return ""
}

func (x *EventWrappedBeginRedelegate) GetSourceValidatorAddress() string {
	if x != nil {
		return x.SourceValidatorAddress
	}
	return ""
}

func (x *EventWrappedBeginRedelegate) GetDestinationValidatorAddress() string {
	if x != nil {
		return x.DestinationValidatorAddress
	}
	return ""
}

func (x *EventWrappedBeginRedelegate) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EventWrappedBeginRedelegate) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *EventWrappedBeginRedelegate) GetEpochBoundary() uint64 {
	if x != nil {
		return x.EpochBoundary
	}
	return 0
}

var File_cosmos_epoching_v1_events_proto protoreflect.FileDescriptor

var file_cosmos_epoching_v1_events_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x0f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x32, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb0, 0x02, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x2e,
	0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x6b, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0c, 0x42, 0x3a, 0xda, 0xde, 0x1f, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x65,
	0x74, 0x62, 0x66, 0x74, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x12,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x13, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x76, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x73, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x12, 0x2d, 0x0a, 0x12, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x6c,
	0x61, 0x73, 0x68, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22,
	0xc5, 0x01, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x22, 0xc7, 0x01, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x22, 0x9d, 0x02, 0x0a, 0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38,
	0x0a, 0x18, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x1d, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x42, 0xbf, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x3b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x45,
	0x58, 0xaa, 0x02, 0x12, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5c,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x43, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x5c, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x43,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cosmos_epoching_v1_events_proto_rawDescOnce sync.Once
	file_cosmos_epoching_v1_events_proto_rawDescData = file_cosmos_epoching_v1_events_proto_rawDesc
)

func file_cosmos_epoching_v1_events_proto_rawDescGZIP() []byte {
	file_cosmos_epoching_v1_events_proto_rawDescOnce.Do(func() {
		file_cosmos_epoching_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_cosmos_epoching_v1_events_proto_rawDescData)
	})
	return file_cosmos_epoching_v1_events_proto_rawDescData
}

var file_cosmos_epoching_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_cosmos_epoching_v1_events_proto_goTypes = []interface{}{
	(*EventBeginEpoch)(nil),             // 0: cosmos.epoching.v1.EventBeginEpoch
	(*EventEndEpoch)(nil),               // 1: cosmos.epoching.v1.EventEndEpoch
	(*EventHandleQueuedMsg)(nil),        // 2: cosmos.epoching.v1.EventHandleQueuedMsg
	(*EventSlashThreshold)(nil),         // 3: cosmos.epoching.v1.EventSlashThreshold
	(*EventWrappedDelegate)(nil),        // 4: cosmos.epoching.v1.EventWrappedDelegate
	(*EventWrappedUndelegate)(nil),      // 5: cosmos.epoching.v1.EventWrappedUndelegate
	(*EventWrappedBeginRedelegate)(nil), // 6: cosmos.epoching.v1.EventWrappedBeginRedelegate
}
var file_cosmos_epoching_v1_events_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cosmos_epoching_v1_events_proto_init() }
func file_cosmos_epoching_v1_events_proto_init() {
	if File_cosmos_epoching_v1_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cosmos_epoching_v1_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBeginEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventEndEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventHandleQueuedMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSlashThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventWrappedDelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventWrappedUndelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cosmos_epoching_v1_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventWrappedBeginRedelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cosmos_epoching_v1_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cosmos_epoching_v1_events_proto_goTypes,
		DependencyIndexes: file_cosmos_epoching_v1_events_proto_depIdxs,
		MessageInfos:      file_cosmos_epoching_v1_events_proto_msgTypes,
	}.Build()
	File_cosmos_epoching_v1_events_proto = out.File
	file_cosmos_epoching_v1_events_proto_rawDesc = nil
	file_cosmos_epoching_v1_events_proto_goTypes = nil
	file_cosmos_epoching_v1_events_proto_depIdxs = nil
}
