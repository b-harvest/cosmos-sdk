syntax = "proto3";
package cosmos.bls.v1;

import "gogoproto/gogo.proto";

option go_package = "cosmossdk.io/x/bls/types";

// BlsKey wraps BLS public key with PoP
message BlsKey {
  // pubkey is the BLS public key of a validator
  bytes pubkey = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/crypto/keys/bls12381.PublicKey"];

  // pop is the proof-of-possession of the BLS key
  ProofOfPossession pop = 3;
}

// ProofOfPossession defines proof for the ownership of Ed25519 and BLS private
// keys
message ProofOfPossession {
  // ed25519_sig is used for verification, ed25519_sig = sign(key = Ed25519_sk,
  // data = BLS_pk)
  bytes ed25519_sig = 2;
  // bls_sig is the result of PoP, bls_sig = sign(key = BLS_sk, data =
  // ed25519_sig)
  bytes bls_sig = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/crypto/keys/bls12381.Signature"];
}

// ValidatorWithBLSSet defines a set of validators with their BLS public keys
message ValidatorWithBlsKeySet {
  repeated ValidatorWithBlsKey val_set = 1;
}

// ValidatorWithBlsKey couples validator address, voting power, and its bls
// public key
message ValidatorWithBlsKey {
  string validator_address = 1;
  bytes  bls_pub_key       = 2;
  uint64 voting_power      = 3;
}
