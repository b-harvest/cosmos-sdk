syntax = "proto3";
package cosmos.tax.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/tax/types";

// Params defines the set of params for the tax module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  repeated Tax taxes = 1 [(gogoproto.moretags) = "yaml:\"taxes\"", (gogoproto.nullable) = false];
}

// Tax defines
message Tax {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  // name defines the name of the tax
  string name = 1 [(gogoproto.moretags) = "yaml:\"name\""];

  // rate specifies the distributing amount by ratio of total tax source
  string rate = 2 [
    (gogoproto.moretags)   = "yaml:\"rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  // pool_address defines the bech32-encoded address of the tax pool to distribute
  string pool_address = 3 [(gogoproto.moretags) = "yaml:\"pool_address\""];

  // tax_source_address defines the bech32-encoded address that source of the tax
  string tax_source_address = 4 [(gogoproto.moretags) = "yaml:\"tax_source_address\""];

  // start_time specifies the start time of the tax
  google.protobuf.Timestamp start_time = 5
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"start_time\""];

  // end_time specifies the end time of the tax
  google.protobuf.Timestamp end_time = 6
      [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"end_time\""];
}
