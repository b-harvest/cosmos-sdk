syntax = "proto3";
package cosmos.tax.v1beta1;

import "cosmos/tax/v1beta1/tax.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/tax/types";

// Query defines the gRPC query service for the tax module.
service Query {
  // Params returns parameters of the tax module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmos/tax/v1beta1/params";
  }

  // Taxes returns all taxes.
  rpc Taxes(QueryTaxesRequest) returns (QueryTaxesResponse) {
    option (google.api.http).get = "/cosmos/tax/v1beta1/taxes";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryTaxesRequest is the request type for the Query/Taxes RPC method.
message QueryTaxesRequest {
  string name               = 1;
  string pool_address       = 2;
  string tax_source_address = 3;
}

// QueryTaxesResponse is the response type for the Query/Taxes RPC method.
message QueryTaxesResponse {
  repeated Tax taxes = 1;
}
